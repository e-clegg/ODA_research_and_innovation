gov_list_unnest_2 <- uk_gov_list_filtered %>%
# filter(lengths(recipient_country) != 0) %>%
unnest(cols = recipient_country,
keep_empty = TRUE)
# B) Unlist recipient countries
gov_list_unnest_2 <- uk_gov_list_filtered %>%
filter(lengths(recipient_country) != 0) %>%
unnest(cols = recipient_country)
View(gov_list_unnest_2)
test1 <- filter(gov_list_unnest_2, is.na(country.code))
test2 <- filter(gov_list_unnest_2, is.na(country.name))
View(test1)
View(test2)
# B) Unlist recipient countries
gov_list_unnest_2 <- uk_gov_list_filtered %>%
filter(lengths(recipient_country) != 0) %>%
unnest(cols = recipient_country) %>%
select(iati_identifier, country.name) %>%
group_by(iati_identifier) %>%
unique() %>%
summarise(country_name = paste(coalesce(country.name, ""), collapse = ", ")) %>%
ungroup()
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector)
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector,
keep_empty = TRUE)
gov_list_unnest_3 <- uk_gov_list_filtered %>%
# filter(lengths(sector) != 0) %>%
unnest(cols = sector,
keep_empty = TRUE)
gov_list_unnest_3 <- uk_gov_list_filtered %>%
# filter(lengths(sector) != 0) %>%
unnest(cols = sector,
keep_empty = TRUE)
# C) Unlist sectors
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.code, sector.name, percentage) %>%
filter(sector.name %in% sector_list_research$name) %>%  # keep research sectors only
mutate(percentage = as.numeric(percentage)) %>%
group_by(iati_identifier) %>%
unique() %>%
ungroup()
View(gov_list_unnest_3)
# C) Unlist sectors
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.code, sector.name, percentage) %>%
#filter(sector.name %in% sector_list_research$name) %>%  # keep research sectors only
mutate(percentage = as.numeric(percentage)) %>%
group_by(iati_identifier) %>%
unique() %>%
ungroup()
# C) Unlist sectors
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.code, sector.name, percentage) %>%
#filter(sector.name %in% sector_list_research$name) %>%  # keep research sectors only
#mutate(percentage = as.numeric(percentage)) %>%
group_by(iati_identifier) %>%
unique() %>%
ungroup()
# Summarise all sector descriptions for each activity
gov_list_unnest_3 <- gov_list_unnest_3 %>%
summarise(sector_code = paste(coalesce(sector.code, ""), collapse = ", "),
sector_name = paste(coalesce(sector.name, ""), collapse = ", "))
# D) Unlist implementing organisations
gov_list_unnest_4 <- uk_gov_list_filtered %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
filter(role.name == "Implementing") %>%
unique()
# Add country locations based on IATI references or lookup
gov_list_unnest_4 <- gov_list_unnest_4 %>%
mutate(country_code = if_else(!is.na(ref) & substr(ref,3,3) == "-", substr(ref,1,2), ""),
org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
mutate(org_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# D) Unlist implementing organisations
gov_list_unnest_4 <- uk_gov_list_filtered %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
filter(role.name == "Implementing") %>%
unique()
# Add country locations based on IATI references or lookup
gov_list_unnest_4 <- gov_list_unnest_4 %>%
mutate(country_code = if_else(!is.na(ref) & substr(ref,3,3) == "-", substr(ref,1,2), ""),
org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
mutate(partner_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
View(gov_list_unnest_4)
# Summarise partner org countries and names
gov_list_unnest_4_countries <- gov_list_unnest_4 %>%
select(iati_identifier, partner_country) %>%
unique() %>%
filter(!is.na(partner_country)) %>%
group_by(iati_identifier) %>%
summarise(partner_country = paste(partner_country, collapse = ", "))
gov_list_unnest_4_partners <- gov_list_unnest_4 %>%
select(iati_identifier, text) %>%
unique() %>%
filter(!is.na(text)) %>%
group_by(iati_identifier) %>%
summarise(partner = paste(coalesce(text, ""), collapse = ", "))
# Summarise partner org countries and names
gov_list_unnest_4_countries <- gov_list_unnest_4 %>%
select(iati_identifier, partner_country) %>%
unique() %>%
filter(!is.na(partner_country)) %>%
group_by(iati_identifier) %>%
summarise(partner_country = paste(partner_country, collapse = ", "))
gov_list_unnest_4_partners <- gov_list_unnest_4 %>%
select(iati_identifier, text) %>%
unique() %>%
filter(!is.na(text)) %>%
group_by(iati_identifier) %>%
summarise(partner = paste(coalesce(text, ""), collapse = ", "))
# Add partner name and country info to master dataset
gov_list_unnest_4 <- gov_list_unnest_4 %>%
left_join(gov_list_unnest_4_partners, by = "iati_identifier") %>%
left_join(gov_list_unnest_4_countries, by = "iati_identifier")
View(gov_list_unnest_4)
# Add country locations based on IATI org references or lookup
gov_list_unnest_4 <- gov_list_unnest_4 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(ref) & substr(ref,3,3) == "-" & !(substr(ref,1,2) %in% c("XI", "XM"))), substr(ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
mutate(partner_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# D) Unlist implementing organisations
gov_list_unnest_4 <- uk_gov_list_filtered %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
filter(role.name == "Implementing") %>%
unique()
# Add country locations based on IATI org references or lookup
gov_list_unnest_4 <- gov_list_unnest_4 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(ref) & substr(ref,3,3) == "-" & !(substr(ref,1,2) %in% c("XI", "XM"))), substr(ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
mutate(partner_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# Summarise partner org countries and names
gov_list_unnest_4_countries <- gov_list_unnest_4 %>%
select(iati_identifier, partner_country) %>%
unique() %>%
filter(!is.na(partner_country)) %>%
group_by(iati_identifier) %>%
summarise(partner_country = paste(partner_country, collapse = ", "))
gov_list_unnest_4_partners <- gov_list_unnest_4 %>%
select(iati_identifier, text) %>%
unique() %>%
filter(!is.na(text)) %>%
group_by(iati_identifier) %>%
summarise(partner = paste(coalesce(text, ""), collapse = ", "))
# Add partner name and country info to master dataset
gov_list_unnest_4 <- gov_list_unnest_4 %>%
select(-text, -partner_country) %>%
left_join(gov_list_unnest_4_partners, by = "iati_identifier") %>%
left_join(gov_list_unnest_4_countries, by = "iati_identifier")
# E) Unlist extending organisations
gov_list_unnest_5 <- uk_gov_list_filtered %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative) %>%
unnest(cols = narrative) %>%
#  select(-lang.code, -lang.name) %>%
filter(role.name == "Extending") %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(extending_org = paste(coalesce(text, ""), collapse = ", ")) %>%
ungroup()
# F) Unlist reporting department
gov_list_unnest_6 <- uk_gov_list_filtered %>%
filter(lengths(reporting_org.narrative) != 0) %>%
unnest(cols = reporting_org.narrative) %>%
select(iati_identifier,
reporting_org_ref = reporting_org.ref,
reporting_org = text) %>%
unique()
# G) Unlist and aggregate committments
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end) %>%
# take first record for activities with multiple budgets for the same period
group_by(iati_identifier, budget_status, currency, period_start, period_end) %>%
top_n(n = 1) %>%
# remove unpopulated budget status records
filter(!is.na(budget_status)) %>%
ungroup()
# Find activities with multiple budgets
multiple_budgets <- gov_list_unnest_7 %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
View(multiple_budgets)
# G) Unlist and aggregate committments
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end) %>%
# take first record for activities with multiple budgets for the same period
group_by(iati_identifier, budget_status, currency, period_start, period_end) %>%
summarise(amount = sum(amount)) %>%
# remove unpopulated budget status records
filter(!is.na(budget_status)) %>%
ungroup()
# Find activities with multiple budgets
multiple_budgets <- gov_list_unnest_7 %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
View(multiple_budgets)
# Find activities with multiple budgets (e.g. both indicative and committed)
multiple_budgets <- gov_list_unnest_7 %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
# G) Unlist and aggregate committments
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end) %>%
# sum budgets for activities with multiple budgets for the same period
# group_by(iati_identifier, budget_status, currency, period_start, period_end) %>%
# summarise(amount = sum(amount)) %>%
# remove unpopulated budget status records
filter(!is.na(budget_status)) %>%
ungroup()
# Find activities with multiple budgets (e.g. both indicative and committed)
multiple_budgets <- gov_list_unnest_7 %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
# Keep only the committed budget in these cases
gov_list_unnest_7 <- gov_list_unnest_7 %>%
filter(!(iati_identifier %in% multiple_budgets$iati_identifier) |
budget_status == "Committed")
# Sum to get total budget per activity
gov_list_unnest_7 <- gov_list_unnest_7 %>%
group_by(iati_identifier, currency) %>%
summarise(period_start = min(period_start),
period_end = max(period_end),
amount = sum(amount))
test <- filter(gov_list_unnest_7, iati_identifier == "GB-GOV-10-RSTMH_SG_2020")
View(test)
test <- filter(gov_list_unnest_7, iati_identifier == "GB-GOV-13-NEWT-AMS_CHN_NAF0001")
View(test)
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end)
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end) %>%
# remove unpopulated budget status records
filter(!is.na(budget_status))
# G) Unlist and aggregate committments
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end)
# Find activities with multiple budgets for same period (e.g. both indicative and committed)
multiple_budgets <- gov_list_unnest_7 %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
View(multiple_budgets)
# Find activities with multiple budgets for same period (e.g. both indicative and committed)
multiple_budgets <- gov_list_unnest_7 %>%
group_by(iati_identifier, budget_status, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
# Find activities with multiple budgets for same period
multiple_budgets <- gov_list_unnest_7 %>%
select(iati_identifier, budget_status, period_start, period_end) %>%
unique() %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
View(multiple_budgets)
# G) Unlist and aggregate committments
gov_list_unnest_7 <- uk_gov_list_filtered %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end)
# Find activities with multiple budgets for same period (i.e. indicative and committed)
multiple_budgets <- gov_list_unnest_7 %>%
select(iati_identifier, budget_status, period_start, period_end) %>%
unique() %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
# Keep only the committed budget in these cases
gov_list_unnest_7 <- gov_list_unnest_7 %>%
filter(!(iati_identifier %in% multiple_budgets$iati_identifier) |
budget_status == "Committed")
# Sum to get total budget per activity
gov_list_unnest_7 <- gov_list_unnest_7 %>%
group_by(iati_identifier, currency) %>%
summarise(period_start = min(period_start),
period_end = max(period_end),
amount = sum(amount))
test <- filter(gov_list_unnest_7, iati_identifier == "GB-GOV-10-RSTMH_SG_2020")
View(test)
test <- filter(gov_list_unnest_7, iati_identifier == "GB-GOV-13-NEWT-AMS_CHN_NAF0001")
View(test)
# H) Unlist start/end dates
gov_list_unnest_8 <- uk_gov_list_filtered %>%
filter(lengths(activity_date) != 0) %>%
unnest(cols = activity_date) %>%
select(iati_identifier,
date = iso_date,
date_type = type.name) %>%
unique() %>%
spread(key = date_type, value = date) %>%
mutate(start_date = coalesce(`Actual start`, `Planned start`),
end_date = coalesce(`Actual end`, `Planned End`)) %>%
select(iati_identifier, start_date, end_date)
# Join unnested info to original data
gov_list <- gov_list_base %>%
left_join(gov_list_unnest_1, by = "iati_identifier") %>%
left_join(gov_list_unnest_2, by = "iati_identifier") %>%
left_join(gov_list_unnest_3, by = "iati_identifier") %>%
left_join(gov_list_unnest_4, by = "iati_identifier") %>%
left_join(gov_list_unnest_5, by = "iati_identifier") %>%
left_join(gov_list_unnest_6, by = "iati_identifier") %>%
left_join(gov_list_unnest_7, by = "iati_identifier") %>%
left_join(gov_list_unnest_8, by = "iati_identifier")
# C) Unlist sectors
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.code, sector.name, percentage) %>%
filter(sector.name %in% sector_list_research$name) %>%  # keep research sectors only
group_by(iati_identifier) %>%
unique() %>%
ungroup()
# C) Unlist research sectors
gov_list_unnest_3 <- uk_gov_list_filtered %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.name, percentage) %>%
filter(sector.name %in% sector_list_research$name) %>%  # keep research sectors only
unique() %>%
group_by(iati_identifier) %>%
summarise(sector_name = paste(coalesce(sector.name, ""), collapse = ", ")) %>%
ungroup()
View(gov_list_unnest_3)
# Join unnested info to original data
gov_list <- gov_list_base %>%
left_join(gov_list_unnest_1, by = "iati_identifier") %>%
left_join(gov_list_unnest_2, by = "iati_identifier") %>%
left_join(gov_list_unnest_3, by = "iati_identifier") %>%
left_join(gov_list_unnest_4, by = "iati_identifier") %>%
left_join(gov_list_unnest_5, by = "iati_identifier") %>%
left_join(gov_list_unnest_6, by = "iati_identifier") %>%
left_join(gov_list_unnest_7, by = "iati_identifier") %>%
left_join(gov_list_unnest_8, by = "iati_identifier")
# Remove non-research activities for Defra, ex-FCO, Prosperity Fund etc. based on sector information
gov_list <- gov_list %>%
filter(reporting_org_ref %in% c("GB-GOV-1", "GB-GOV-10", "GB-GOV-13") & !str_detect(iati_identifier, "GB-GOV-3") |
!is.na(sector_name))
table(gov_list, flow_type)
table(gov_list$flow_type)
# Extract basic activity information - hierarchy and status
gov_list_base <- uk_gov_list_filtered %>%
select(iati_identifier, hierarchy,
activity_status = activity_status.name) %>%
mutate(activity_id = "") %>%
unique()
# Join unnested info to original data
gov_list <- gov_list_base %>%
left_join(gov_list_unnest_1, by = "iati_identifier") %>%
left_join(gov_list_unnest_2, by = "iati_identifier") %>%
left_join(gov_list_unnest_3, by = "iati_identifier") %>%
left_join(gov_list_unnest_4, by = "iati_identifier") %>%
left_join(gov_list_unnest_5, by = "iati_identifier") %>%
left_join(gov_list_unnest_6, by = "iati_identifier") %>%
left_join(gov_list_unnest_7, by = "iati_identifier") %>%
left_join(gov_list_unnest_8, by = "iati_identifier")
# Remove non-research activities for Defra, ex-FCO, Prosperity Fund etc. based on sector information
gov_list <- gov_list %>%
filter(reporting_org_ref %in% c("GB-GOV-1", "GB-GOV-10", "GB-GOV-13") & !str_detect(iati_identifier, "GB-GOV-3") |
!is.na(sector_name))
# Join unnested info to original data
gov_list <- gov_list_base %>%
left_join(gov_list_unnest_1, by = "iati_identifier") %>%
left_join(gov_list_unnest_2, by = "iati_identifier") %>%
left_join(gov_list_unnest_3, by = "iati_identifier") %>%
left_join(gov_list_unnest_4, by = "iati_identifier") %>%
left_join(gov_list_unnest_5, by = "iati_identifier") %>%
left_join(gov_list_unnest_6, by = "iati_identifier") %>%
left_join(gov_list_unnest_7, by = "iati_identifier") %>%
left_join(gov_list_unnest_8, by = "iati_identifier")
# Remove non-research activities for Defra, ex-FCO, Prosperity Fund etc. based on sector information
gov_list <- gov_list %>%
filter(reporting_org_ref %in% c("GB-GOV-1", "GB-GOV-10", "GB-GOV-13") & !str_detect(iati_identifier, "GB-GOV-3") |
!is.na(sector_name))
# Reorder columns and add date of refresh
gov_list <- gov_list %>%
select(reporting_org_ref, reporting_org,
iati_identifier, hierarchy, activity_status,
activity_title, General, Objectives, start_date, end_date,
all_countries = country_name, sector_name,
partner, partner_country, extending_org,
amount, period_start, period_end, currency) %>%
unique() %>%
mutate(refresh_date = Sys.Date())
# Add Fund label
gov_list <- gov_list %>%
mutate(fund = case_when(
str_detect(iati_identifier, "Newton|NEWT|NF") ~ "Newton Fund",
str_detect(iati_identifier, "GCRF") ~ "Global Challenges Research Fund (GCRF)",
str_detect(iati_identifier, "UKVN") ~ "Global Health Security - UK Vaccine Network",
str_detect(iati_identifier, "GAMRIF") ~ "Global Health Security - GAMRIF",
(str_detect(iati_identifier, "NIHR") | str_detect(activity_title, "NIHR")) ~ "Global Health Research - Programmes",
str_detect(iati_identifier, "ICF") ~ "International Climate Finance (ICF)",
str_detect(iati_identifier, "Chevening") ~ "Chevening Scholarships",
str_detect(iati_identifier, "GB-1-|GB-GOV-1-") ~ "FCDO Research - Programmes",
reporting_org_ref == "GB-GOV-10" ~ "Global Health Research - Partnerships",
TRUE ~ "Other"
))
unique(gov_funder$reporting_org)
unique(gov_list$reporting_org)
# Correct Funder names
gov_list <- gov_list %>%
mutate(reporting_org = case_when(
reporting_org_ref == "GB-GOV-1" ~ "Foreign, Commonwealth and Development Office",
str_detect(reporting_org, "Health") ~ "Department of Health and Social Care",
str_detect(reporting_org, "Culture") ~ "Department for Digital, Culture, Media and Sport",
TRUE ~ reporting_org
)) %>%
mutate(reporting_org = str_replace_all(reporting_org, "UK - ", ""))
unique(gov_list$reporting_org)
gov_list_final <- gov_list %>%
# define FCDO programme ID
mutate(programme_id = if_else(hierarchy == 2,
substr(iati_identifier, 1, nchar(iati_identifier)-4), iati_identifier)) %>%
filter(((reporting_org_ref %in% c("GB-GOV-1", "GB-GOV-10") & hierarchy == 2) | # FCDO, DHSC - keep components
str_detect(iati_identifier, "GB-GOV-3") | # ex-FCO activities
reporting_org_ref %in% c("GB-GOV-7", "GB-GOV-12", "GB-GOV-13", "GB-GOV-50") |   # Defra, DCMS, BEIS, Prosperity Fund do not use child hierarchies
(reporting_org_ref %in% c("GB-GOV-10") & str_detect(iati_identifier, "GAMRIF|UKVN")) |
(reporting_org_ref %in% c("GB-GOV-10") & fund == "Other" & !is.na(amount))), # DHSC non-NIHR spend
!(hierarchy == 1 & str_detect(iati_identifier, "AMS|BA"))) # BEIS DP activities
View(gov_list_final)
