roda_extract_gcrf_final <- roda_extract_gcrf %>%
rename(id = `Extending organisation - award ID`,
abstract = `Award description`,
title = `Award title`,
amount = `Award amount (Â£)`,
recipient_country = `Beneficiary country`,
extending_org = `Extending organisation - name`,
lead_org_name = `Lead organisation - name`,
lead_org_country = `Lead organisation - country`,
partner_org_name = `Implementing partner(s) - name`,
partner_org_country = `Implementing partner(s) - country`,
iati_id = `Funder programme - IATI ID`,
link = `Data source`
) %>%
mutate(start_date = as.character(as.Date(`Start date`, "%d %B %Y")),
end_date = as.character(as.Date(`End date`, "%d %B %Y")),
currency = coalesce(Currency, "GBP"),
status = if_else(`Status` %in% c("Spend in progress", "Agreement in place", "Delivery", "Finalisation"), "Active",
if_else(`Status` %in% c("Completed"), "Closed",
if_else(`Status` %in% c("Cancelled"), "Cancelled", "Unknown"))),
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
# suppress display of end dates that have passed
mutate(end_date = if_else(Sys.Date() <= end_date, end_date, "")) %>%
# remove unecessary variables
select(-`No.`, -Currency, -`Aims/Objectives`, -`Investigator(s) - name`,  -Status,
-`Start date`, -`End date`)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(Fund = "Newton Fund",
Funder = "Department for Business, Energy and Industrial Strategy",
lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(as.Date(coalesce(`Actual start date`, `Planned start date`), "%d %B %Y")),
end_date = as.character(as.Date(coalesce(`Actual end date`, `Planned end date`), "%d %B %Y")),
currency = "GBP",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date) %>%
mutate(status = if_else(!is.na(end_date),
if_else(Sys.Date() <= end_date, "Active", "Closed"), "Unknown")) %>%
# suppress display of end dates that have passed
mutate(end_date = if_else(Sys.Date() <= end_date, end_date, "")) %>%
select(-`Delivery partner`, -`Recipient region`, -`Planned start date`,
-`Planned end date`, -`Actual start date`, -`Actual end date`)
rm(roda_extract_gcrf)
rm(roda_extract_newton)
all_projects <- rbind(ukri_projects_with_countries, nihr_projects_final,
iati_projects_final, wellcome_grants_final,
collated_spreadsheet_data,
roda_extract_gcrf_final, roda_extract_newton_final) %>%
unique() %>%
ungroup()
# Add FCDO DevTracker links in absence of other public source
all_projects <- all_projects %>%
mutate(link = if_else((str_detect(iati_id, "GB-GOV-1-") | str_detect(iati_id, "GB-1-")) & is.na(link),
paste0("https://devtracker.fcdo.gov.uk/projects/", iati_id, "/summary"), link))
# Save as R file (to read back in if needed)
saveRDS(all_projects, file = "Outputs/all_projects.rds")
# Read in data from script 3
all_projects <- readRDS("Outputs/all_projects.rds")
# Distinguish location and beneficiary countries in main dataset
all_projects_final <- all_projects %>%
mutate(location_country = paste0(coalesce(lead_org_country, ""), ", ", coalesce(partner_org_country, "")),
beneficiary_country = recipient_country)
# Convert location vs. beneficiary country data to long format
countries_data <- all_projects_final %>%
select(id, beneficiary_country, location_country) %>%
gather(key = "country_type", value = "Country", -id) %>%
right_join(select(all_projects_final, -beneficiary_country, -location_country), by = "id")
# Convert dataset to long with one row per country entry
all_projects_split_country <- countries_data %>%
select(id, extending_org, country_type, Country) %>%
mutate(Country = str_replace_all(Country, "Tanzania, United Republic Of|Tanzania, United Republic of", "Tanzania"),
Country = if_else(Country %in% c("Congo (the Democratic Republic of the)", "DRC"),
"Democratic Republic of the Congo", Country)) %>%
mutate(Country = str_replace_all(Country, ";", ",")) %>%
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", as.character(Country))) %>%
separate_rows(Country, sep = ",", convert = FALSE)
# Clean country field
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = str_trim(Country))
# Convert dataset to long with one row per country entry
all_projects_split_country <- countries_data %>%
select(id, extending_org, country_type, Country) %>%
mutate(Country = str_replace_all(Country, "Tanzania, United Republic Of|Tanzania, United Republic of", "Tanzania"),
Country = if_else(Country %in% c("Congo (the Democratic Republic of the)", "DRC"),
"Democratic Republic of the Congo", Country)) %>%
mutate(Country = str_replace_all(Country, ";", ",")) %>%
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", as.character(Country))) %>%
separate_rows(Country, sep = ",", convert = FALSE)
# Clean country field
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = case_when(
str_detect(Country, "UK|Uk|Scotland|Wales|United kingdom|England|Northern Ireland|UNITED KINGDOM") ~ "United Kingdom",
str_detect(Country, "USA|Usa|UNITED STATES|United states|United States Of America|US") ~ "United States",
str_detect(Country, "Netherlands") ~ "Netherlands",
str_detect(Country, "Philippines") ~ "Philippines",
str_detect(Country, "Ivoire"), ~ "Ivory Coast",
str_detect(Country, "Republic of Congo") ~ "Congo Republic",
str_detect(Country, "Hong Kong") ~ "Hong Kong",
str_detect(Country, "Viet Nam") ~ "Vietnam",
str_detect(Country, "Lao") ~ "Laos",
TRUE ~ Country)) %>%
unique() %>%
filter(!(Country %in% c("", "NA", "Unknown")) & !is.na(Country)) %>%
arrange(id)
# Clean country field
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = case_when(
str_detect(Country, "UK|Uk|Scotland|Wales|United kingdom|England|Northern Ireland|UNITED KINGDOM") == TRUE ~ "United Kingdom",
str_detect(Country, "USA|Usa|UNITED STATES|United states|United States Of America|US") ~ "United States",
str_detect(Country, "Netherlands") ~ "Netherlands",
str_detect(Country, "Philippines") ~ "Philippines",
str_detect(Country, "Ivoire"), ~ "Ivory Coast",
str_detect(Country, "Republic of Congo") ~ "Congo Republic",
str_detect(Country, "Hong Kong") ~ "Hong Kong",
str_detect(Country, "Viet Nam") ~ "Vietnam",
str_detect(Country, "Lao") ~ "Laos",
TRUE ~ Country)) %>%
unique() %>%
filter(!(Country %in% c("", "NA", "Unknown")) & !is.na(Country)) %>%
arrange(id)
# Clean country field
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = case_when(
str_detect(Country, "UK|Uk|Scotland|Wales|United kingdom|England|Northern Ireland|UNITED KINGDOM") == TRUE ~ "United Kingdom",
str_detect(Country, "USA|Usa|UNITED STATES|United states|United States Of America|US") == TRUE ~ "United States",
str_detect(Country, "Netherlands") == TRUE ~ "Netherlands",
str_detect(Country, "Philippines") == TRUE ~ "Philippines",
str_detect(Country, "Ivoire") == TRUE ~ "Ivory Coast",
str_detect(Country, "Republic of Congo") == TRUE ~ "Congo Republic",
str_detect(Country, "Hong Kong") == TRUE ~ "Hong Kong",
str_detect(Country, "Viet Nam") == TRUE ~ "Vietnam",
str_detect(Country, "Lao") == TRUE ~ "Laos",
TRUE ~ Country)) %>%
unique() %>%
filter(!(Country %in% c("", "NA", "Unknown")) & !is.na(Country)) %>%
arrange(id)
# Check countries that are unmatched (this information will be overwritten)
unmatched_countries <- all_projects_split_country %>%
filter(!(Country %in% dac_lookup$country_name)) %>%
select(Country) %>%
unique()
View(unmatched_countries)
# Replace country with "Unknown" if not recognised against Tableau's accepted list
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = if_else(Country %in% dac_lookup$country_name, Country, "Unknown")) %>%
unique()
# Join countries to project data
all_projects_final <- countries_data %>%
# remove commas at start
mutate(Country = if_else(substr(Country, 1, 1) == ",", substr(Country, 2, length(Country)-1), Country)) %>%
rename(all_countries = Country) %>%
left_join(all_projects_split_country, by = c("id", "extending_org", "country_type"))
# Add row ID field to dataset
all_projects_final$row_id <- seq.int(nrow(all_projects_final))
rm(all_projects)
rm(all_projects_split_country)
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(all_projects_final,
Country %in% c("Unknown") | is.na(Country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(all_projects_final,
!(Country %in% c("Unknown") | is.na(Country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
# Exclude project records for "Unknown" country when the project has other country info
all_projects_tidied <- all_projects_final %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
rm(all_projects_final)
rm(unknown_country_projects)
rm(duplicate_country_projects)
# Tidy fund and funder labelling
all_projects_tidied <- all_projects_tidied %>%
mutate(Fund = if_else(str_detect(Fund, "FCDO Research & Innovation"), "FCDO Research - Programmes", Fund))
# Add FCDO programme ID to dataset
all_projects_tidied <- all_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else(Funder %in% c("Foreign, Commonwealth and Development Office", "FCDO")
& str_detect(iati_id, "-1-"),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- all_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
all_projects_tidied <- all_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id"))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
all_projects_tidied <- all_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre"))
# Remove Afghanistan projects (added Sep 21)
all_projects_tidied <- all_projects_tidied %>%
filter(Country != "Afghanistan")
# Manually edit country info for Chevening Scholarships
all_projects_tidied <- all_projects_tidied %>%
mutate(lead_org_country = if_else(Fund == "Chevening Scholarships", "United Kingdom", lead_org_country),
Country = if_else(Fund == "Chevening Scholarships" & country_type == 2, "United Kingdom", Country),
start_date = if_else(Fund == "Chevening Scholarships", "", start_date))
# Remove non-research partners
# (linked partner data from non-RED managed programmes)
all_projects_tidied <- all_projects_tidied %>%
filter(!(extending_org %in% c("Sightsavers",
"Coffey International Development Limited, a Tetra Tech Company")))
# Correct missing IDS name (ARPA activity)
all_projects_tidied <- all_projects_tidied %>%
mutate(extending_org = if_else(extending_org == "GB-COH-877338",
"Institute of Development Studies", extending_org))
# Remove WHO non-research/innovation activities
all_projects_tidied <- all_projects_tidied %>%
filter(!(extending_org == "World Health Organization") |
str_detect(title, "research|innovation"))
# check list of ODA R&I funds
table(all_projects_tidied$Fund)
# check list of ODA R&I funders
table(all_projects_tidied$Funder)
# check list of ODA R&I funders
table(all_projects_tidied$currency)
# Restrict to active projects for Tableau
all_projects_tidied <- all_projects_tidied %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2)) %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
# Write to RDS
saveRDS(all_projects_tidied, "Outputs/all_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(all_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
## Indo-Pacific
country_list <- c("Cambodia", "Indonesia", "Laos", "Malaysia", "Myanmar", "Philippines",
"Singapore", "Thailand", "Vietnam")
all_projects <- readRDS("Outputs/all_projects.rds") %>%
mutate(Funder = case_when(
Funder == "Foreign, Commonwealth and Development Office" ~ "FCDO",
Funder == "Department of Health and Social Care" ~ "DHSC",
Funder == "Department for Business, Energy and Industrial Strategy" ~ "BEIS"
))
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds") %>%
mutate(Funder = case_when(
Funder == "Foreign, Commonwealth and Development Office" ~ "FCDO",
Funder == "Department of Health and Social Care" ~ "DHSC",
Funder == "Department for Business, Energy and Industrial Strategy" ~ "BEIS"
))
wb <- openxlsx::createWorkbook()
# Set header style (bold)
header_st <- createStyle(textDecoration = "Bold",
fontSize = 8, fontName = "Arial",
halign = "center")
# Set table style
table_st <- createStyle(fontSize = 8, fontName = "Arial",
wrapText = TRUE,
valign = "top")
for(i in 1:length(country_list)) {
print(paste0(i, " - ", country_list[i]))
# Extract project data for selected country
country_project_ids <- all_projects_tidied %>%
filter(Country == country_list[i]) %>%
select(id) %>%
unique()
country_project_data <- all_projects %>%
filter(id %in% country_project_ids$id)
# Prepare output report fields
output_report <- country_project_data %>%
mutate(Start = format(as.Date(start_date), format = "%Y"),
End = format(as.Date(end_date), format = "%Y"),
link = coalesce(link, ""))
# Restrict columns and dedup
output_report <- output_report %>%
select(Funder, Fund,
Title = title, Start, End, Description = abstract,
`Lead Organisation` = lead_org_name, `Partner Organisations` = partner_org_name,
`Web Link` = link) %>%
group_by(Title, Funder) %>%
slice(1) %>%
ungroup() %>%
unique()
# Join on funder programme names
output_report <- output_report %>%
left_join(select(all_projects_tidied, title, Funder, funder_programme) %>% unique(),
by = c("Title" = "title", "Funder")) %>%
rename(Programme = funder_programme)
# Summarise funders on co-funded projects
co_funded_projects <- output_report %>%
group_by(Title) %>%
summarise(n = n(),
comb_funder = paste(coalesce(Funder, ""), collapse = ", ")) %>%
filter(n > 1) %>%
select(-n)
# Add summarised funders to main report
output_report <- output_report %>%
left_join(co_funded_projects, by = "Title") %>%
mutate(Funder = coalesce(comb_funder, Funder)) %>%
group_by(Title) %>%
# Keep one row per project title
slice(1) %>%
select(Funder, Fund, Programme, Title, Start, End, Description, `Lead Organisation`, `Partner Organisations`, `Web Link`)
# Add country dataset to output list
openxlsx::addWorksheet(wb, sheetName = country_list[i])
openxlsx::writeData(wb, sheet = i, x = output_report,
headerStyle = header_st,
borderStyle = "thin")
# Add font style
addStyle(wb, sheet = i, table_st, rows = 2:200, cols = 1:10, gridExpand = TRUE, stack = TRUE)
# Identify titles and hyperlinks
hyperlinks <- output_report$`Web Link`
names(hyperlinks) <- output_report$`Web Link`
class(hyperlinks) <- "hyperlink"
# Write hyperlinks
writeData(wb, sheet = i, x = hyperlinks, startRow = 2, startCol = 10, colNames = FALSE)
# Set column widths
setColWidths(wb, sheet = i, cols = 1:10, widths = c(10,25,30,40,6,6,60,30,30,50))
}
# Resave Excel file
saveWorkbook(wb, "Outputs//Indo-Pacific ODA programmes - Nov21.xlsx", overwrite = TRUE)
i <- 3
print(paste0(i, " - ", country_list[i]))
# Extract project data for selected country
country_project_ids <- all_projects_tidied %>%
filter(Country == country_list[i])
output_report <- output_report %>%
select(Funder, Fund, Programme = funder_programme,
Title = title, Start, End, Description = abstract,
`Lead Organisation` = lead_org_name, `Partner Organisations` = partner_org_name,
`Web Link` = link) %>%
group_by(Title, Funder) %>%
slice(1) %>%
ungroup() %>%
unique()
i <- 3
print(paste0(i, " - ", country_list[i]))
# Extract project data for selected country
country_project_ids <- all_projects_tidied %>%
filter(Country == country_list[i])
output_report <- country_project_ids %>%
select(Funder, Fund, Programme = funder_programme,
Title = title, Start, End, Description = abstract,
`Lead Organisation` = lead_org_name, `Partner Organisations` = partner_org_name,
`Web Link` = link) %>%
group_by(Title, Funder) %>%
slice(1) %>%
ungroup() %>%
unique()
print(paste0(i, " - ", country_list[i]))
# Extract project data for selected country
country_project_ids <- all_projects_tidied %>%
filter(Country == country_list[i]) %>%
mutate(Start = format(as.Date(start_date), format = "%Y"),
End = format(as.Date(end_date), format = "%Y"),
link = coalesce(link, ""))
output_report <- country_project_ids %>%
select(Funder, Fund, Programme = funder_programme,
Title = title, Start, End, Description = abstract,
`Lead Organisation` = lead_org_name, `Partner Organisations` = partner_org_name,
`Web Link` = link) %>%
group_by(Title, Funder) %>%
slice(1) %>%
ungroup() %>%
unique()
# Summarise funders on co-funded projects
co_funded_projects <- output_report %>%
group_by(Title) %>%
summarise(n = n(),
comb_funder = paste(coalesce(Funder, ""), collapse = ", ")) %>%
filter(n > 1) %>%
select(-n)
# Add summarised funders to main report
output_report <- output_report %>%
left_join(co_funded_projects, by = "Title") %>%
mutate(Funder = coalesce(comb_funder, Funder)) %>%
group_by(Title) %>%
# Keep one row per project title
slice(1) %>%
select(Funder, Fund, Programme, Title, Start, End, Description, `Lead Organisation`, `Partner Organisations`, `Web Link`)
View(output_report)
## Indo-Pacific
country_list <- c("Cambodia", "Indonesia", "Laos", "Malaysia", "Myanmar", "Philippines",
"Singapore", "Thailand", "Vietnam")
all_projects <- readRDS("Outputs/all_projects.rds") %>%
mutate(Funder = case_when(
Funder == "Foreign, Commonwealth and Development Office" ~ "FCDO",
Funder == "Department of Health and Social Care" ~ "DHSC",
Funder == "Department for Business, Energy and Industrial Strategy" ~ "BEIS"
))
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds") %>%
mutate(Funder = case_when(
Funder == "Foreign, Commonwealth and Development Office" ~ "FCDO",
Funder == "Department of Health and Social Care" ~ "DHSC",
Funder == "Department for Business, Energy and Industrial Strategy" ~ "BEIS"
))
wb <- openxlsx::createWorkbook()
# Set header style (bold)
header_st <- createStyle(textDecoration = "Bold",
fontSize = 8, fontName = "Arial",
halign = "center")
# Set table style
table_st <- createStyle(fontSize = 8, fontName = "Arial",
wrapText = TRUE,
valign = "top")
for(i in 1:length(country_list)) {
print(paste0(i, " - ", country_list[i]))
# Extract project data for selected country
country_project_ids <- all_projects_tidied %>%
filter(Country == country_list[i]) %>%
mutate(Start = format(as.Date(start_date), format = "%Y"),
End = format(as.Date(end_date), format = "%Y"),
link = coalesce(link, ""))
output_report <- country_project_ids %>%
select(Funder, Fund, Programme = funder_programme,
Title = title, Start, End, Description = abstract,
`Lead Organisation` = lead_org_name, `Partner Organisations` = partner_org_name,
`Web Link` = link) %>%
group_by(Title, Funder) %>%
slice(1) %>%
ungroup() %>%
unique()
#   select(id) %>%
#   unique()
#
# country_project_data <- all_projects %>%
#   filter(id %in% country_project_ids$id)
#
# # Prepare output report fields
# output_report <- country_project_data %>%
#   mutate(Start = format(as.Date(start_date), format = "%Y"),
#          End = format(as.Date(end_date), format = "%Y"),
#          link = coalesce(link, ""))
#
# # Restrict columns and dedup
# output_report <- output_report %>%
# Join on funder programme names
# output_report <- output_report %>%
#   left_join(select(all_projects_tidied, title, Funder, funder_programme) %>% unique(),
#             by = c("Title" = "title", "Funder")) %>%
#   rename(Programme = funder_programme)
# Summarise funders on co-funded projects
co_funded_projects <- output_report %>%
group_by(Title) %>%
summarise(n = n(),
comb_funder = paste(coalesce(Funder, ""), collapse = ", ")) %>%
filter(n > 1) %>%
select(-n)
# Add summarised funders to main report
output_report <- output_report %>%
left_join(co_funded_projects, by = "Title") %>%
mutate(Funder = coalesce(comb_funder, Funder)) %>%
group_by(Title) %>%
# Keep one row per project title
slice(1) %>%
select(Funder, Fund, Programme, Title, Start, End, Description, `Lead Organisation`, `Partner Organisations`, `Web Link`)
# Add country dataset to output list
openxlsx::addWorksheet(wb, sheetName = country_list[i])
openxlsx::writeData(wb, sheet = i, x = output_report,
headerStyle = header_st,
borderStyle = "thin")
# Add font style
addStyle(wb, sheet = i, table_st, rows = 2:200, cols = 1:10, gridExpand = TRUE, stack = TRUE)
# Identify titles and hyperlinks
hyperlinks <- output_report$`Web Link`
names(hyperlinks) <- output_report$`Web Link`
class(hyperlinks) <- "hyperlink"
# Write hyperlinks
writeData(wb, sheet = i, x = hyperlinks, startRow = 2, startCol = 10, colNames = FALSE)
# Set column widths
setColWidths(wb, sheet = i, cols = 1:10, widths = c(10,25,30,40,6,6,60,30,30,50))
}
# Resave Excel file
saveWorkbook(wb, "Outputs//Indo-Pacific ODA programmes - Nov21.xlsx", overwrite = TRUE)
# Resave Excel file
saveWorkbook(wb, "Outputs//Indo-Pacific ODA programmes - Nov21.xlsx", overwrite = TRUE)
