all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
org_names_and_locations <- readRDS("Outputs/org_names_and_locations.rds")
con_live <- DBI::dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server   = "hel-sql-120",
Database = "ODARIProjects",
Trusted_Connection = "True")
# 1) Create master project table ----
project_table <- all_projects_tidied %>%
# remove all fields that can have multiple entries for a project
select(-Funder, -Fund, -iati_id,
-recipient_country,
-lead_org_name, -lead_org_country,
-partner_org_name, -partner_org_country,
-period_start, -period_end,
-last_updated) %>%
# limit character fields to 255 chars
mutate(title = if_else(nchar(title) > 255, substr(title, 1, 255), title),
abstract = if_else(nchar(abstract) > 5000, substr(abstract, 1, 5000), abstract),
subject = if_else(nchar(subject) > 255, substr(subject, 1, 255), subject),
link = if_else(nchar(link) > 255, "", link)) %>%
# remove special characters
mutate(title = str_replace_all(title, "‘|’", ""),
abstract = str_replace_all(abstract, "‘|’", "")) %>%
rename(project_id = id) %>%
unique()
# find duplicate project ids
duplicates <- project_table %>%
group_by(project_id) %>%
summarise(n = n()) %>%
filter(n > 1) %>%
inner_join(project_table, by = "project_id")
# remove duplicate rows (rough)
project_table <- project_table[!duplicated(project_table$project_id), ]
funder_table <- all_projects_tidied %>%
# remove all fields that can have multiple entries for a project
select(project_id = id, funder = Funder,
fund = Fund, funder_iati_id = iati_id) %>%
unique()
organisation_table <- org_names_and_locations
# Distinguish location and beneficiary countries in main dataset
country_table <- all_projects_tidied %>%
mutate(beneficiary_country = recipient_country,
location_country = paste0(coalesce(lead_org_country, ""), ", ", coalesce(partner_org_country, ""))) %>%
select(project_id = id, location_country, beneficiary_country) %>%
unique()
# Convert location vs. beneficiary country data to long format
country_table <- country_table %>%
gather(key = "country_type", value = "Country", -project_id) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
Country = str_to_lower(Country))
# Clean country names
country_table_cleaned <- country_table %>%
mutate(Country = str_replace_all(Country, "\\(the\\)", ""),  # remove (the)
Country = gsub("[()]", "", Country),                  # remove all parentheses
Country = str_replace_all(Country, "tanzania, united republic of", "tanzania"),
Country = str_replace_all(Country, "congo the democratic republic of the|drc|democratic republic of congo",
"democratic republic of the congo"),
Country = str_replace_all(Country, "china people's republic of", "china"),
Country = str_replace_all(Country, "democratic people's republic of korea", "democratic people’s republic of korea")) %>%
# standardise separators
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", Country))
# Convert dataset to long with one row per country entry
country_table_cleaned <- country_table_cleaned %>%
separate_rows(Country, sep = ",|;", convert = FALSE) %>%
mutate(Country = str_trim(Country)) %>%
unique() %>%
filter(Country != "")
# Further country cleaning
country_table_cleaned <- country_table_cleaned %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = case_when(
str_detect(Country, "uk|scotland|wales|united kingdom|england|ireland") ~ "united kingdom",
str_detect(Country, "usa|united states") ~ "united states",
Country == "us" ~ "united states",
str_detect(Country, "ivoire") ~ "ivory coast",
str_detect(Country, "viet") ~ "vietnam",
str_detect(Country, "lao") ~ "laos",
TRUE ~ Country)) %>%
unique()
# Replace country with "unknown" if not recognised against Tableau's accepted list
country_table_final <- country_table_cleaned %>%
mutate(Country = if_else(Country %in% dac_lookup$country_name, Country, "unknown")) %>%
mutate(Country = tools::toTitleCase(Country)) %>%
unique()
# Save datasets for testing
saveRDS(country_table, file = "Outputs/country_table.rds")
saveRDS(country_table_cleaned, file = "Outputs/country_table_cleaned.rds")
saveRDS(country_table_final, file = "Outputs/country_table_final.rds")
dbSendQuery(con_live, "DELETE FROM [ODARIProjects].[dbo].[Project]")
dbAppendTable(con_live, "Project", project_table, row.names = NULL)
dbAppendTable(con_live, "Project", head(project_table, 6000), row.names = NULL)
dbAppendTable(con_live, "Project", slice(project_table, 5000:6000), row.names = NULL)
# Read in project and country datasets from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
country_table_final <- readRDS("Outputs/country_table_final.rds")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Add row ID field to dataset
tableau_projects$row_id <- seq.int(nrow(tableau_projects))
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(tableau_projects,
country %in% c("Unknown") | is.na(country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(tableau_projects,
!(country %in% c("Unknown") | is.na(country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
# Read in project and country datasets from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
country_table_final <- readRDS("Outputs/country_table_final.rds")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Add row ID field to dataset
tableau_projects$row_id <- seq.int(nrow(tableau_projects))
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(tableau_projects,
Country %in% c("Unknown") | is.na(Country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(tableau_projects,
!(Country %in% c("Unknown") | is.na(Country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
rm(tableau_projects)
rm(unknown_country_projects)
rm(duplicate_country_projects)
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- tableau_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre"),
!is.na(amount))
# TEMPORARY
# Remove Afghanistan projects (added Sep 21)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Country != "Afghanistan")
# Restrict to active projects for Tableau
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
# Write to RDS
saveRDS(tableau_projects_tidied, "Outputs/tableau_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(tableau_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre"))
test <- tableau_projects_tidied %>%
filter(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre")
# Read in project and country datasets from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
country_table_final <- readRDS("Outputs/country_table_final.rds")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Add row ID field to dataset
tableau_projects$row_id <- seq.int(nrow(tableau_projects))
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(tableau_projects,
Country %in% c("Unknown") | is.na(Country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(tableau_projects,
!(Country %in% c("Unknown") | is.na(Country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
rm(tableau_projects)
rm(unknown_country_projects)
rm(duplicate_country_projects)
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- tableau_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
test <- tableau_projects_tidied %>%
filter(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre")
View(test)
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre" &
is.na(amount)))
test <- tableau_projects_tidied %>%
filter(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre")
View(test)
# TEMPORARY
# Remove Afghanistan projects (added Sep 21)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Country != "Afghanistan")
# Restrict to active projects for Tableau
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
# Write to RDS
saveRDS(tableau_projects_tidied, "Outputs/tableau_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(tableau_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
test <- tableau_projects_tidied %>%
filter(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre")
View(test)
View(test)
test <- tableau_projects_tidied %>%
filter(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre")
test <- tableau_projects_tidied %>%
filter(extending_org == "International Development Research Centre")
View(test)
table(tableau_projects_tidied$country_type)
test <- tableau_projects_tidied %>%
# filter(extending_org == "International Development Research Centre")
filter(!(country_type %in% c(1,2)))
View(test)
tableau_projects_tidied <- readRDS("Outputs/tableau_projects_tidied.rds")
test <- tableau_projects_tidied %>%
filter(extending_org == "International Development Research Centre")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(tableau_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Add row ID field to dataset
tableau_projects$row_id <- seq.int(nrow(tableau_projects))
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(tableau_projects,
Country %in% c("Unknown") | is.na(Country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(tableau_projects,
!(Country %in% c("Unknown") | is.na(Country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
View(duplicate_country_projects)
View(unknown_country_projects)
test <- filter(all_projects_tidied, str_detect(id, "AH/R004617/1"))
View(test)
test2 <- filter(country_table_final, str_detect(id, "AH/R004617/1"))
test2 <- filter(country_table_final, str_detect(project_id, "AH/R004617/1"))
View(test2)
test2 <- filter(tableau_projects_tidied, str_detect(id, "AH/R004617/1"))
test <- filter(all_projects_tidied, str_detect(id, "GCRF-CICA-R12017-IC170306"))
test2 <- filter(country_table_final, str_detect(project_id, "GCRF-CICA-R12017-IC170306"))
test3 <- filter(tableau_projects_tidied, str_detect(id, "GCRF-CICA-R12017-IC170306"))
View(test3)
source('C:/Users/e-clegg/OneDrive - DFID/Github Projects/ODA_research_and_innovation/Script 6 - Output 1 (active projects for Tableau).R', echo=TRUE)
# Set country_type for genuine unknowna
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Add row ID field to dataset
tableau_projects$row_id <- seq.int(nrow(tableau_projects))
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(tableau_projects,
Country %in% c("Unknown") | is.na(Country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(tableau_projects,
!(Country %in% c("Unknown") | is.na(Country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
# Set country_type for genuine unknowna
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown")
View(unknowns)
test <- filter(all_projects_tidied, str_detect(id, "NE/L001349/1"))
test2 <- filter(country_table_final, str_detect(project_id, "NE/L001349/1"))
test3 <- filter(tableau_projects_tidied, str_detect(id, "NE/L001349/1"))
# Set country_type for genuine unknowna
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
select(id, Country, country_type) %>%
unique()
View(unknowns)
# Set country_type for genuine unknowna
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
select(id, Country) %>%
unique()
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
# Set country_type for genuine unknowna
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
mutate(country_type = 2)
tableau_projects_tidied <- tableau_projects_tidied %>%
mutate(country_type = if_else(Country == "Unknown", 1, country_type))
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
# Set country_type for genuine unknowna
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
mutate(country_type = 2)
tableau_projects_tidied <- tableau_projects_tidied %>%
mutate(country_type = if_else(Country == "Unknown", 1, country_type)) %>%
rbind(unknowns)
unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown")
View(unknowns)
test <- filter(all_projects_tidied, str_detect(id, "300211-6"))
test2 <- filter(country_table_final, str_detect(project_id, "300211-6"))
test3 <- filter(tableau_projects_tidied, str_detect(id, "300211-6"))
View(test)
View(test2)
View(test3)
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
# Set country_type for genuine unknowna
unknowns_1 <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
mutate(country_type = 1)
unknowns_2 <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
mutate(country_type = 2)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Country == "Unknown")) %>%
rbind(unknowns_1) %>%
rbind(unknowns_2)
# Set country_type for genuine unknowna
unknowns_1 <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
mutate(country_type = 1)
View(unknowns_1)
# Set country_type for genuine unknowna
unknowns_1 <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
unique() %>%
mutate(country_type = 1)
# Exclude project records for "Unknown" country when the project has other country info
tableau_projects_tidied <- tableau_projects %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"),
country_type = coalesce(country_type, 1))
unique(tableau_projects_tidied$country_type)
test <- unique(tableau_projects_tidied$country_type)
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- tableau_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" &
extending_org == "International Development Research Centre" &
is.na(amount))
)
test <- tableau_projects_tidied %>%
filter(extending_org == "International Development Research Centre")
# TEMPORARY
# Remove Afghanistan projects (added Sep 21)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Country != "Afghanistan")
# Restrict to active projects for Tableau
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
# Write to RDS
saveRDS(tableau_projects_tidied, "Outputs/tableau_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(tableau_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
