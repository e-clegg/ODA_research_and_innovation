unnest(col = title.narrative) %>%
select(funder_iati_id = iati_identifier, funder_programme = text)
} else {
new_data <- data.frame()
}
return(new_data)
}
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
all_projects_tidied <- all_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id"))
# TEMPORARY ***
# Remove IDRC DHSC IATI data
all_projects_tidied <- all_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre"))
# check list of ODA R&I funds
unique(all_projects_tidied$Fund)
test <- filter(all_projects_tidied, is.na(Fund))
nrow(test)
# check list of ODA R&I funders
unique(all_projects_tidied$Funder)
test <- filter(all_projects_tidied, is.na(Funder))
# Check countries
unique(all_projects_tidied$Country)
test <- filter(all_projects_tidied,
is.na(Country) | str_detect(Country, ","))
test2 <- filter(all_projects_tidied,
Country == "Unknown")
test3 <- filter(all_projects_tidied,
Country == "Niger")
# Unknown country should be for the activity location only
unique(test2$country_type)
# Write to RDS
saveRDS(all_projects_tidied, "Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
status = if_else(is.na(status), "Unknown",
if_else(status == "Complete", "Closed", status))) %>%
unique() %>%
filter(status != "Closed")
# Remove Afghanistan projects
all_projects_tidied <- all_projects_tidied %>%
filter(Country != "Afghanistan")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(all_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
if (!("googlesheets4" %in% installed.packages())) {
install.packages("googlesheets4")
}
if (!("gargle" %in% installed.packages())) {
install.packages("gargle")
}
if (!("jsonlite" %in% installed.packages())) {
install.packages("jsonlite")
}
if (!("tidyverse" %in% installed.packages())) {
install.packages("httr")
}
if (!("tidyverse" %in% installed.packages())) {
install.packages("tidyverse")
}
if (!("tidyverse" %in% installed.packages())) {
install.packages("readxl")
}
# Load packages -----
library(jsonlite)
library(googlesheets4)
library(gargle)
library(httr)
library(tidyverse)
library(readxl)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
unique(all_projects_tidied$status)
table(all_projects_tidied$status)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
status = if_else(as.Date(end_date) > Sys.Date(), "Closed", status)) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
table(all_projects_tidied$status)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
status = if_else((!is.na(end_date)) & as.Date(end_date) > Sys.Date(), "Closed", status)) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
table(all_projects_tidied$status)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
status = if_else(!is.na(end_date),
if_else(as.Date(end_date) <= Sys.Date(), "Closed", status))) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
status = if_else(!is.na(end_date),
if_else(as.Date(end_date) <= Sys.Date(), "Closed", status)))
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
status = if_else(!is.na(end_date),
if_else(as.Date(end_date) <= Sys.Date(), "Closed", status), status)) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
table(all_projects_tidied$status)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2)
# status = if_else(!is.na(end_date),
#                  if_else(as.Date(end_date) <= Sys.Date(), "Closed", status), status)
) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
table(all_projects_tidied$status)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
# select(-subject, -all_countries, -last_updated) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2)
, status = if_else(!is.na(end_date),
if_else(as.Date(end_date) <= Sys.Date(), "Closed", status), status)
) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
table(all_projects_tidied$status)
# Remove Afghanistan projects
all_projects_tidied <- all_projects_tidied %>%
filter(Country != "Afghanistan")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(all_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
if (!("httr" %in% installed.packages())) {
install.packages("httr")
}
if (!("jsonlite" %in% installed.packages())) {
install.packages("jsonlite")
}
if (!("tidyverse" %in% installed.packages())) {
install.packages("tidyverse")
}
if (!("readxl" %in% installed.packages())) {
install.packages("readxl")
}
# Load packages -----
library(jsonlite)
library(httr)
library(tidyverse)
library(readxl)
# Read in public data on Wellcome Grants
wellcome_grants <- read_excel("Inputs/wellcome grants.xlsx")
View(wellcome_grants)
unique(wellcome_grants$`Co-funder`)
# Add missing fields and format Funder/Fund field
wellcome_grants_formatted <- wellcome_grants %>%
mutate(status = if_else(Sys.Date() <= `Planned Dates:End Date`, "Active", "Closed"),
extending_org = "Wellcome Trust",
currency = "GBP",
partner_org_name = `Other Implementing Organisations`,
partner_org_country = `Research Location Countries`,
recipient_country = "",
period_start = "",
period_end = "",
Funder = if_else(str_detect(`Partner Organisation(s)`, "National Institute for Health Research"),
"Department of Health and Social Care", `Partner Organisation(s)`),
Fund = if_else(Funder == "Department of Health and Social Care",
"Global Health Research - Partnerships", "FCDO Research - Programmes"),
last_updated = quarter_end_date)
# Add missing fields and format Funder/Fund field
wellcome_grants_formatted <- wellcome_grants %>%
mutate(status = if_else(Sys.Date() <= `Planned Dates:End Date`, "Active", "Closed"),
extending_org = "Wellcome Trust",
currency = "GBP",
partner_org_name = `Other Implementing Organisations`,
partner_org_country = `Research Location Countries`,
recipient_country = "",
period_start = "",
period_end = "",
Funder = if_else(str_detect(`Co-funder`, "National Institute for Health Research"),
"Department of Health and Social Care", `Co-funder`),
Fund = if_else(Funder == "Department of Health and Social Care",
"Global Health Research - Partnerships", "FCDO Research - Programmes"),
last_updated = quarter_end_date)
# Set quarter end date
quarter_end_date <- as.Date("2021-06-30")
# Add missing fields and format Funder/Fund field
wellcome_grants_formatted <- wellcome_grants %>%
mutate(status = if_else(Sys.Date() <= `Planned Dates:End Date`, "Active", "Closed"),
extending_org = "Wellcome Trust",
currency = "GBP",
partner_org_name = `Other Implementing Organisations`,
partner_org_country = `Research Location Countries`,
recipient_country = "",
period_start = "",
period_end = "",
Funder = if_else(str_detect(`Co-funder`, "National Institute for Health Research"),
"Department of Health and Social Care", `Co-funder`),
Fund = if_else(Funder == "Department of Health and Social Care",
"Global Health Research - Partnerships", "FCDO Research - Programmes"),
last_updated = quarter_end_date)
# Select desired variables
wellcome_grants_formatted <- wellcome_grants_formatted %>%
select(id = `Internal ID`,
title = Title,
abstract = Description,
start_date = `Planned Dates:Start Date`,
end_date = `Planned Dates:End Date`,
amount = `ODA funding`,
period_start,
period_end,
currency,
extending_org,
lead_org_name = `Recipient Org:Name`,
lead_org_country = `Recipient Org:Country`,
partner_org_name,
partner_org_country,
iati_id,
Fund,
Funder,
recipient_country,
subject = `Partnership Name`,
status,
last_updated
)
# Add missing fields and format Funder/Fund field
wellcome_grants_formatted <- wellcome_grants %>%
mutate(status = if_else(Sys.Date() <= `Planned Dates:End Date`, "Active", "Closed"),
extending_org = "Wellcome Trust",
currency = "GBP",
partner_org_name = `Other Implementing Organisations`,
partner_org_country = `Research Location Countries`,
recipient_country = "",
period_start = "",
period_end = "",
iati_id = "",
Funder = if_else(str_detect(`Co-funder`, "National Institute for Health Research"),
"Department of Health and Social Care", `Co-funder`),
Fund = if_else(Funder == "Department of Health and Social Care",
"Global Health Research - Partnerships", "FCDO Research - Programmes"),
last_updated = quarter_end_date)
# Select desired variables
wellcome_grants_formatted <- wellcome_grants_formatted %>%
select(id = `Internal ID`,
title = Title,
abstract = Description,
start_date = `Planned Dates:Start Date`,
end_date = `Planned Dates:End Date`,
amount = `ODA funding`,
period_start,
period_end,
currency,
extending_org,
lead_org_name = `Recipient Org:Name`,
lead_org_country = `Recipient Org:Country`,
partner_org_name,
partner_org_country,
iati_id,
Fund,
Funder,
recipient_country,
subject = `Partnership Name`,
status,
last_updated
)
# Format date fields for merging
wellcome_grants_final <- wellcome_grants_formatted %>%
mutate(start_date = as.character(start_date),
end_date = as.character(end_date),
link = "https://wellcome.org/grant-funding/funded-people-and-projects")
roda_extract_newton <- read_excel("Inputs/BEIS_NF_MODARI_Q1_2021-2022.xlsx")
roda_extract_newton <- read_excel("Inputs/BEIS_NF_MODARI_Q1_2021-2022.xlsx")
unique(roda_extract_newton$`Lead Organisation`)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
start_date = `Planned start date`,
end_date = `Planned end date`,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(start_date),
end_date = as.character(end_date),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
start_date = coalesce(`Actual start date`, `Planned start date`),
end_date = coalesce(`Actual end date`, `Planned end date`),
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(start_date),
end_date = as.character(end_date),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
select(-`No.`, -Currency, -`Aims/Objectives`, -`Investigator(s) - name`,  -Status)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(coalesce(`Actual start date`, `Planned start date`)),
end_date = as.character(coalesce(`Actual end date`, `Planned end date`)),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
select(-`No.`, -Currency, -`Aims/Objectives`, -`Investigator(s) - name`,  -Status)
roda_extract_newton <- read_excel("Inputs/BEIS_NF_MODARI_Q1_2021-2022.xlsx")
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(coalesce(`Actual start date`, `Planned start date`)),
end_date = as.character(coalesce(`Actual end date`, `Planned end date`)),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
select(-`No.`, -Currency, -`Aims/Objectives`, -`Investigator(s) - name`,  -Status)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(coalesce(`Actual start date`, `Planned start date`)),
end_date = as.character(coalesce(`Actual end date`, `Planned end date`)),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(coalesce(`Actual start date`, `Planned start date`)),
end_date = as.character(coalesce(`Actual end date`, `Planned end date`)),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
select(-`Delivery partner`, -`Recipient region`, -`Planned start date`,
-`Planned end date`, -`Actual start date`, -`Actual end date`)
# Read in BEIS data
roda_extract_gcrf <- read_excel("Inputs/BEIS RODA - GCRF non-UKRI Q1-21-22.xlsx", sheet = 2)
# Reformat to match other datasetS
roda_extract_gcrf_final <- roda_extract_gcrf %>%
rename(id = `Extending organisation - award ID`,
title = `Award title`,
abstract = `Award description`,
start_date = `Start date`,
end_date = `End date`,
amount = `Award amount (£)`,
recipient_country = `Beneficiary country`,
extending_org = `Extending organisation - name`,
lead_org_name = `Lead organisation - name`,
lead_org_country = `Lead organisation - country`,
partner_org_name = `Implementing partner(s) - name`,
partner_org_country = `Implementing partner(s) - country`,
iati_id = `Funder programme - IATI ID`,
link = `Data source`
) %>%
mutate(start_date = as.character(start_date),
end_date = as.character(end_date),
currency = coalesce(Currency, "GDP"),
status = if_else(`Status` %in% c("Spend in progress", "Agreement in place", "Delivery", "Finalisation"), "Active",
if_else(`Status` %in% c("Completed"), "Closed",
if_else(`Status` %in% c("Cancelled"), "Cancelled", "Unknown"))),
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
select(-`No.`, -Currency, -`Aims/Objectives`, -`Investigator(s) - name`,  -Status)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(Fund = "Newton Fund",
Funder = "Department for Business, Energy and Industrial Strategy",
lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(coalesce(`Actual start date`, `Planned start date`)),
end_date = as.character(coalesce(`Actual end date`, `Planned end date`)),
currency = "GDP",
status = "",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
select(-`Delivery partner`, -`Recipient region`, -`Planned start date`,
-`Planned end date`, -`Actual start date`, -`Actual end date`)
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
# Limit size and number of columns for writing
all_projects_tidied <- all_projects_tidied %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
# ensure end dates have not passed on "active" projects
status = if_else(!is.na(end_date),
if_else(as.Date(end_date) <= Sys.Date(), "Closed", status), status)) %>%
unique() %>%
filter(status %in% c("Active", "Unknown"))
# Remove Afghanistan projects
all_projects_tidied <- all_projects_tidied %>%
filter(Country != "Afghanistan")
unique(all_projects_tidied$id)
test <- unique(all_projects_tidied$id)
# Read in data from script 4
all_projects_transactions <- readRDS(file = "Outputs/all_projects_transactions.rds")
