left_join(country_table_final, by = c("id" = "project_id"))
# Identify projects with no country info whatsoever
project_country_unknowns <- filter(tableau_projects, Country == "Unknown") %>%
select(id, country_type) %>%
unique() %>%
group_by(id) %>%
summarise(n = n()) %>%
filter(n > 1)
# Delete any other unknown records - these don't need displaying in Tableau
tableau_projects <- tableau_projects %>%
filter(id %in% project_country_unknowns$id | Country != "Unknown")
rm(tableau_projects)
rm(unknown_country_projects)
rm(duplicate_country_projects)
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- tableau_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" &
extending_org == "International Development Research Centre" &
is.na(amount))
)
# TEMPORARY
# Remove Afghanistan projects (added Sep 21)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Country != "Afghanistan")
# Restrict to active projects for Tableau
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
# Write to RDS
saveRDS(tableau_projects_tidied, "Outputs/tableau_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(tableau_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
View(project_country_unknowns)
test <- all_projects_tidied %>%
filter(Country == "Unknown" & status %in% c("Active", "Unknown")) %>%
select(id) %>% unique()
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
test <- tableau_projects %>%
filter(Country == "Unknown" & status %in% c("Active", "Unknown")) %>%
select(id) %>% unique()
View(test)
test <- tableau_projects %>%
filter(Country == "Unknown" & status %in% c("Active", "Unknown"),
id %in% project_country_unknowns$id) %>%
select(id) %>% unique()
View(test)
test <- tableau_projects %>%
filter(Country == "Unknown",
status %in% c("Active", "Unknown"),
id %in% project_country_unknowns$id) %>%
select(id) %>% unique()
View(test)
test2 <- tableau_projects_tidied %>% filter(id == "103710")
View(test2)
test2 <- tableau_projects_tidied %>% filter(id == "105283")
test3 <- tableau_projects_tidied %>%
filter(id %in% test$id)
View(test3)
View(test3)
test4 <- filter(tableau_projects, id == "	103710")
# Read in project and country datasets from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
country_table_final <- readRDS("Outputs/country_table_final.rds")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
test4 <- filter(tableau_projects, id == "	103710")
test4 <- filter(tableau_projects, project_id == "	103710")
test4 <- filter(tableau_projects, id == "103710")
View(test4)
test4 <- filter(project_country_unknowns, id == "103710")
View(test4)
test2 <- tableau_projects_tidied %>% filter(id == "105283")
test2 <- tableau_projects_tidied %>% filter(id == "103710")
test3 <- filter(tableau_projects, id == "103710")
test4 <- filter(project_country_unknowns, id == "103710")
# Read in project and country datasets from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
country_table_final <- readRDS("Outputs/country_table_final.rds")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Identify projects with no country info whatsoever
project_country_unknowns <- filter(tableau_projects, Country == "Unknown") %>%
select(id, country_type) %>%
unique() %>%
group_by(id) %>%
summarise(n = n()) %>%
filter(n > 1)
test1 <- filter(tableau_projects, id == "103710")
test2 <- filter(project_country_unknowns, id == "103710")
# Delete any other unknown records - these don't need displaying in Tableau
tableau_projects <- tableau_projects %>%
filter(id %in% project_country_unknowns$id | Country != "Unknown")
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- tableau_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" &
extending_org == "International Development Research Centre" &
is.na(amount))
)
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- tableau_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" &
extending_org == "International Development Research Centre" &
is.na(amount))
)
# TEMPORARY
# Remove Afghanistan projects (added Sep 21)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Country != "Afghanistan")
# Restrict to active projects for Tableau
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
test3 <- filter(tableau_projects_tidied, id == "103710")
View(test1)
View(test2)
View(test3)
original_7 <- country_table %>%
filter(str_detect(project_id, "103710"), country_type == 1)
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
# Read in files for testing
country_table <- readRDS(file = "Outputs/country_table.rds")
country_table_cleaned <- readRDS(file = "Outputs/country_table_cleaned.rds")
original_7 <- country_table %>%
filter(str_detect(project_id, "103710"), country_type == 1)
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
View(original_7)
View(corrected_7)
original_7 <- all_projects_tidied %>%
filter(str_detect(project_id, "103710"), country_type == 1)
original_7 <- all_projects_tidied %>%
filter(str_detect(id, "103710"), country_type == 1)
original_7 <- all_projects_tidied %>%
filter(str_detect(id, "103710"))
View(original_7)
# Read in collated dataset from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
org_names_and_locations <- readRDS("Outputs/org_names_and_locations.rds")
# 1) Create master project table ----
project_table <- all_projects_tidied %>%
# remove all fields that can have multiple entries for a project
select(-Funder, -Fund, -iati_id,
-recipient_country,
-lead_org_name, -lead_org_country,
-partner_org_name, -partner_org_country,
-period_start, -period_end,
-last_updated) %>%
# limit character fields to 255 chars
mutate(title = if_else(nchar(title) > 255, substr(title, 1, 255), title),
abstract = if_else(nchar(abstract) > 5000, substr(abstract, 1, 5000), abstract),
subject = if_else(nchar(subject) > 255, substr(subject, 1, 255), subject),
link = if_else(nchar(link) > 255, "", link)) %>%
# remove special characters
mutate(title = str_replace_all(title, "‘|’", ""),
abstract = str_replace_all(abstract, "‘|’", "")) %>%
rename(project_id = id) %>%
unique()
# find duplicate project ids
duplicates <- project_table %>%
group_by(project_id) %>%
summarise(n = n()) %>%
filter(n > 1) %>%
inner_join(project_table, by = "project_id")
# remove duplicate rows (rough)
project_table <- project_table[!duplicated(project_table$project_id), ]
funder_table <- all_projects_tidied %>%
# remove all fields that can have multiple entries for a project
select(project_id = id, funder = Funder,
fund = Fund, funder_iati_id = iati_id) %>%
unique()
organisation_table <- org_names_and_locations
# Distinguish location and beneficiary countries in main dataset
country_table <- all_projects_tidied %>%
mutate(beneficiary_country = coalesce(recipient_country, "Unknown"),
location_country = paste0(coalesce(lead_org_country, "Unknown"), ", ", coalesce(partner_org_country, "Unknown"))) %>%
select(project_id = id, location_country, beneficiary_country) %>%
unique()
# Convert location vs. beneficiary country data to long format
country_table <- country_table %>%
gather(key = "country_type", value = "Country", -project_id) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
Country = str_to_lower(Country))
# Clean country names
country_table_cleaned <- country_table %>%
mutate(Country = str_replace_all(Country, "\\(the\\)", ""),  # remove (the)
Country = gsub("[()]", "", Country),                  # remove all parentheses
Country = str_replace_all(Country, "tanzania, united republic of", "tanzania"),
Country = str_replace_all(Country, "congo the democratic republic of the|drc|democratic republic of congo",
"democratic republic of the congo"),
Country = str_replace_all(Country, "china people's republic of", "china"),
Country = str_replace_all(Country, "democratic people's republic of korea", "democratic people’s republic of korea")) %>%
# standardise separators
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", Country))
# Convert dataset to long with one row per country entry
country_table_cleaned <- country_table_cleaned %>%
separate_rows(Country, sep = ",|;", convert = FALSE) %>%
mutate(Country = str_trim(Country)) %>%
unique()
# Further country cleaning
country_table_cleaned <- country_table_cleaned %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = case_when(
str_detect(Country, "uk|scotland|wales|united kingdom|england|ireland") ~ "united kingdom",
str_detect(Country, "usa|united states") ~ "united states",
Country == "us" ~ "united states",
str_detect(Country, "ivoire") ~ "ivory coast",
str_detect(Country, "viet") ~ "vietnam",
str_detect(Country, "lao") ~ "laos",
TRUE ~ Country)) %>%
unique()
# Replace country with "unknown" if not recognised against Tableau's accepted list
country_table_final <- country_table_cleaned %>%
mutate(Country = if_else(Country %in% dac_lookup$country_name, Country, "unknown")) %>%
mutate(Country = tools::toTitleCase(Country)) %>%
unique()
# Remove unecessary unknowns
country_table_final$row_id <- seq.int(nrow(country_table_final))
# identify records with more than one country for a country_type
identify_multiples <- country_table_final %>%
group_by(project_id, country_type) %>%
summarise(n = n()) %>%
filter(n > 1)
# identify "unknown" records for projects in the dataset above
identify_unknowns_to_delete <- country_table_final %>%
filter(Country == "Unknown") %>%
left_join(identify_multiples, by = c("project_id", "country_type")) %>%
filter(!is.na(n))
# remove these "unknowns" from the country table
country_table_final <- country_table_final %>%
filter(!(row_id %in% identify_unknowns_to_delete$row_id)) %>%
select(-row_id)
# Save datasets for testing
saveRDS(country_table, file = "Outputs/country_table.rds")
saveRDS(country_table_cleaned, file = "Outputs/country_table_cleaned.rds")
saveRDS(country_table_final, file = "Outputs/country_table_final.rds")
# Read in files for testing
country_table <- readRDS(file = "Outputs/country_table.rds")
country_table_cleaned <- readRDS(file = "Outputs/country_table_cleaned.rds")
original_7 <- all_projects_tidied %>%
filter(str_detect(id, "103710"))
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
View(original_7)
View(corrected_7)
original_7 <- country_table %>%
filter(str_detect(id, "103710"))
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
View(original_7)
original_7 <- country_table %>%
filter(str_detect(project_id, "103710"))
View(original_7)
# Clean country names
country_table_cleaned <- country_table %>%
mutate(Country = str_replace_all(Country, "\\(the\\)", ""),  # remove (the)
Country = gsub("[()]", "", Country),                  # remove all parentheses
Country = str_replace_all(Country, "tanzania, united republic of", "tanzania"),
Country = str_replace_all(Country, "congo the democratic republic of the|drc|democratic republic of congo",
"democratic republic of the congo"),
Country = str_replace_all(Country, "china people's republic of", "china"),
Country = str_replace_all(Country, "democratic people's republic of korea", "democratic people’s republic of korea")) %>%
# standardise separators
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", Country))
# Convert dataset to long with one row per country entry
country_table_cleaned <- country_table_cleaned %>%
separate_rows(Country, sep = ",|;", convert = FALSE) %>%
mutate(Country = str_trim(Country)) %>%
unique()
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
View(corrected_7)
# Further country cleaning
country_table_cleaned <- country_table_cleaned %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = case_when(
str_detect(Country, "uk|scotland|wales|united kingdom|england|ireland") ~ "united kingdom",
str_detect(Country, "usa|united states") ~ "united states",
Country == "us" ~ "united states",
str_detect(Country, "ivoire") ~ "ivory coast",
str_detect(Country, "viet") ~ "vietnam",
str_detect(Country, "lao") ~ "laos",
TRUE ~ Country)) %>%
unique()
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
# Distinguish location and beneficiary countries in main dataset
country_table <- all_projects_tidied %>%
mutate(beneficiary_country = coalesce(recipient_country, "Unknown"),
location_country = paste0(coalesce(lead_org_country, "Unknown"), ", ", coalesce(partner_org_country, "Unknown"))) %>%
select(project_id = id, location_country, beneficiary_country) %>%
unique()
# Convert location vs. beneficiary country data to long format
country_table <- country_table %>%
gather(key = "country_type", value = "Country", -project_id) %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2),
Country = str_to_lower(Country))
original_7 <- country_table %>%
filter(str_detect(project_id, "103710"))
original_7_1 <- all_projects_tidied %>%
filter(str_detect(project_id, "103710"))
original_7_1 <- all_projects_tidied %>%
filter(str_detect(id, "103710"))
View(original_7_1)
original_7 <- country_table %>%
filter(str_detect(project_id, "103710"))
# Clean country names
country_table_cleaned <- country_table %>%
mutate(Country = str_replace_all(Country, "\\(the\\)", ""),  # remove (the)
Country = gsub("[()]", "", Country),                  # remove all parentheses
Country = str_replace_all(Country, "tanzania, united republic of", "tanzania"),
Country = str_replace_all(Country, "congo the democratic republic of the|drc|democratic republic of congo",
"democratic republic of the congo"),
Country = str_replace_all(Country, "china people's republic of", "china"),
Country = str_replace_all(Country, "democratic people's republic of korea", "democratic people’s republic of korea")) %>%
# standardise separators
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", Country))
# Convert dataset to long with one row per country entry
country_table_cleaned <- country_table_cleaned %>%
separate_rows(Country, sep = ",|;", convert = FALSE) %>%
mutate(Country = str_trim(Country)) %>%
unique()
corrected_7 <- country_table_cleaned %>%
filter(str_detect(project_id, "103710"), country_type == 1)
View(corrected_7)
# Read in project and country datasets from previous script
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
country_table_final <- readRDS("Outputs/country_table_final.rds")
tableau_projects <- all_projects_tidied %>%
left_join(country_table_final, by = c("id" = "project_id"))
# Identify projects with no country info whatsoever
project_country_unknowns <- filter(tableau_projects, Country == "Unknown") %>%
select(id, country_type) %>%
unique() %>%
group_by(id) %>%
summarise(n = n()) %>%
filter(n > 1)
# Delete any other unknown records - these don't need displaying in Tableau
tableau_projects <- tableau_projects %>%
filter(id %in% project_country_unknowns$id | Country != "Unknown")
# Add FCDO programme ID to dataset
tableau_projects_tidied <- tableau_projects %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else((Funder == "Foreign, Commonwealth and Development Office"
& str_detect(iati_id, "-1-")),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Join funder programme name to main dataset
tableau_projects_tidied <- tableau_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id")) %>%
mutate(funder_programme = if_else(extending_org == "Wellcome Trust", subject, funder_programme))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" &
extending_org == "International Development Research Centre" &
is.na(amount))
)
# TEMPORARY
# Remove Afghanistan projects (added Sep 21)
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(Country != "Afghanistan")
# Restrict to active projects for Tableau
tableau_projects_tidied <- tableau_projects_tidied %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
no_unknowns <- tableau_projects_tidied %>%
filter(Country == "Unknown") %>%
select(id) %>%  unique()
View(no_unknowns)
View(no_unknowns)
test <- tableau_projects_tidied %>%
filter(is.na(country_type))
table(tableau_projects_tidied$country_type)
View(tableau_projects_tidied)
test <- tableau_projects_tidied %>%
filter(str_detect(title, "GCRF Africa Catalyst"))
View(test)
# Write to RDS
saveRDS(tableau_projects_tidied, "Outputs/tableau_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(tableau_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
all_projects_tidied <- readRDS("Outputs/all_projects_tidied.rds")
table(all_projects_tidied$extending_org)
# Name BEIS delivery partners fully
all_projects_tidied <- all_projects_tidied %>%
mutate(extending_org = case_when(
"AMS" ~ "Academy of Medical Sciences",
"BA" ~ "British Academy",
"BC" ~ "British Council",
"MO" ~ "Met Office",
"RS" ~ "Royal Society",
"UKSA" ~ "UK Space Agency",
TRUE ~ extending_org
))
# Name BEIS delivery partners fully
all_projects_tidied <- all_projects_tidied %>%
mutate(extending_org = case_when(
extending_org == "AMS" ~ "Academy of Medical Sciences",
extending_org == "BA" ~ "British Academy",
extending_org == "BC" ~ "British Council",
extending_org == "MO" ~ "Met Office",
extending_org == "RS" ~ "Royal Society",
extending_org == "UKSA" ~ "UK Space Agency",
TRUE ~ extending_org
))
table(all_projects_tidied$extending_org)
# Name BEIS delivery partners fully
all_projects_tidied <- all_projects_tidied %>%
mutate(extending_org = case_when(
extending_org == "AMS" ~ "Academy of Medical Sciences",
extending_org == "BA" ~ "British Academy",
extending_org == "BC" ~ "British Council",
extending_org == "MO" ~ "Met Office",
extending_org == "RAE" ~ "Royal Academy of Engineering",
extending_org == "RS" ~ "Royal Society",
extending_org == "UKSA" ~ "UK Space Agency",
TRUE ~ extending_org
))
table(all_projects_tidied$extending_org)
# Name BEIS delivery partners fully
all_projects_tidied <- all_projects_tidied %>%
mutate(extending_org = case_when(
extending_org == "AMS" ~ "Academy of Medical Sciences",
extending_org == "BA" ~ "British Academy",
extending_org %in% c("BC", "BRITISH COUNCIL") ~ "British Council",
extending_org == "MO" ~ "Met Office",
extending_org == "RAE" ~ "Royal Academy of Engineering",
extending_org == "RS" ~ "Royal Society",
extending_org == "UKSA" ~ "UK Space Agency",
TRUE ~ extending_org
))
table(all_projects_tidied$extending_org)
saveRDS(all_projects_tidied, file = "Outputs/all_projects_tidied.rds")
