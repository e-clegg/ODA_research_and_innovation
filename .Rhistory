return(list(project_data, org_table))
}
# Read in linked partner IATI activity info from script 1
ri_linked_activites <- readRDS(file = "Outputs/ri_linked_activites.rds")
# Manually add on other (non-linked) partner activities from Excel
partner_iati_activity_ids <- unlinked_partner_iati_activity_ids %>%
plyr::rbind.fill(ri_linked_activites)
partner_activity_extract <- readRDS(file = "Outputs/partner_activity_extract.rds")
org_activity_list <- readRDS("Outputs/org_activity_list.rds")
partner_activities_via_title <- org_activity_list %>%
filter(reporting_org.ref == "DAC-1601") %>%  # Gates org ID
unnest(cols = title.narrative) %>%
filter(str_detect(text, "FCDO|DFID")) %>%
mutate(gov_funder = "Foreign, Commonwealth and Development Office",
fund = "FCDO Research - Partnerships") %>%
select(iati_identifier, gov_funder, fund, text) %>%
unique()
partner_activities_via_funder <- org_activity_list %>%
unnest(cols = title.narrative) %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref, activity_id) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
# restrict to funding organisations and AgResults activities (pooled funding)
filter(role.name %in% c("Funding") |
str_detect(iati_identifier, "XI-IATI-AGR")
) %>%
unique() %>%
# restrict to UK gov funding
filter(ref == "GB-GOV-1" |
str_detect(text, "Britain|DFID|FCDO|DHSC|Department of Health and Social Care") |
str_detect(iati_identifier, "DFID") |
str_detect(iati_identifier, "XI-IATI-AGR")      # AgResults partially funded
) %>%
# define fund and funder
mutate(gov_funder = if_else(str_detect(text, "Health"), "Department of Health and Social Care",
"Foreign, Commonwealth and Development Office"),
fund = case_when(
# IDRC GAMRIF projects
str_detect(iati_identifier, "XM-DAC-301-2") & str_detect(text, "Health") ~ "Global Health Security - GAMRIF",
# Other DHSC partnerships
str_detect(text, "Health") ~ "Global Health Research - Partnerships",
# FCDO AgResults
str_detect(iati_identifier, "XI-IATI-AGR") ~ "FCDO Research - Partnerships",
TRUE ~ "FCDO Research - Programmes"
)) %>%
select(iati_identifier, activity_id, gov_funder, fund, text) %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove World Health Organisation non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(str_detect(iati_identifier, "XM-DAC-928")) |
str_detect(text, "research|innovation"))
table(partnership_activities$fund)
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
View(partnership_activities)
partner_activities_via_funder <- org_activity_list %>%
unnest(cols = title.narrative) %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref, activity_id) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
# restrict to funding organisations and AgResults activities (pooled funding)
filter(role.name %in% c("Funding") |
str_detect(iati_identifier, "XI-IATI-AGR")
) %>%
unique() %>%
# restrict to UK gov funding
filter(ref == "GB-GOV-1" |
str_detect(text, "Britain|DFID|FCDO|DHSC|Department of Health and Social Care") |
str_detect(iati_identifier, "DFID") |
str_detect(iati_identifier, "XI-IATI-AGR")      # AgResults partially funded
) %>%
# define fund and funder
mutate(gov_funder = if_else(str_detect(text, "Health"), "Department of Health and Social Care",
"Foreign, Commonwealth and Development Office"),
fund = case_when(
# IDRC GAMRIF projects
str_detect(iati_identifier, "XM-DAC-301-2") & str_detect(text, "Health") ~ "Global Health Security - GAMRIF",
# Other DHSC partnerships
str_detect(text, "Health") ~ "Global Health Research - Partnerships",
# FCDO AgResults
str_detect(iati_identifier, "XI-IATI-AGR") ~ "FCDO Research - Partnerships",
TRUE ~ "FCDO Research - Programmes"
))
table(org_activity_list$reporting_org.ref)
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
test <- filter(partnership_activities, str_detect(iati_identifier, "XM-DAC-928"))
View(test)
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove World Health Organisation non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(str_detect(iati_identifier, "XM-DAC-928")) |
str_detect(text, "research|innovation"))
# Filter original data
partnership_activities <- org_activity_list %>%
inner_join(partnership_activities, by = "iati_identifier")
# Save to Rdata file
saveRDS(partnership_activities, file = "Outputs/partnership_activities.rds")
partner_activity_comb <- plyr::rbind.fill(partner_activity_extract, partnership_activities) %>%
filter(default_flow_type == "ODA" | is.na(default_flow_type))
# Extract base activity information - hierarchy and status
activity_list_base <- partner_activity_comb %>%
select(iati_identifier, hierarchy,
activity_status = activity_status.name,
activity_id,
gov_funder,
fund) %>%
# Join on fund/funder information
left_join(select(partner_iati_activity_ids, iati_id, gov_funder), by = c("iati_identifier" = "iati_id")) %>%
mutate(gov_funder = coalesce(gov_funder.x, gov_funder.y)) %>%
select(-gov_funder.x, -gov_funder.y) %>%
unique()
# 1) Unlist activity title and description
activity_list_unnest_1 <- partner_activity_comb %>%
# title
filter(lengths(title.narrative) != 0) %>%
unnest(cols = title.narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
rename(activity_title = text) %>%
# description
filter(lengths(description) != 0) %>%
unnest(cols = description) %>%
mutate(type.name = coalesce(type.name, "General")) %>%
select(iati_identifier, activity_title, type.name, narrative) %>%
filter(lengths(narrative) != 0) %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove World Health Organisation non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(str_detect(iati_identifier, "XM-DAC-928")) |
str_detect(text, "research|innovation")) %>%
select(-text)
# Filter original data
partnership_activities <- org_activity_list %>%
inner_join(partnership_activities, by = "iati_identifier")
# Save to Rdata file
saveRDS(partnership_activities, file = "Outputs/partnership_activities.rds")
partner_activity_comb <- plyr::rbind.fill(partner_activity_extract, partnership_activities) %>%
filter(default_flow_type == "ODA" | is.na(default_flow_type))
# Extract base activity information - hierarchy and status
activity_list_base <- partner_activity_comb %>%
select(iati_identifier, hierarchy,
activity_status = activity_status.name,
activity_id,
gov_funder,
fund) %>%
# Join on fund/funder information
left_join(select(partner_iati_activity_ids, iati_id, gov_funder), by = c("iati_identifier" = "iati_id")) %>%
mutate(gov_funder = coalesce(gov_funder.x, gov_funder.y)) %>%
select(-gov_funder.x, -gov_funder.y) %>%
unique()
# 1) Unlist activity title and description
activity_list_unnest_1 <- partner_activity_comb %>%
# title
filter(lengths(title.narrative) != 0) %>%
unnest(cols = title.narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
rename(activity_title = text) %>%
# description
filter(lengths(description) != 0) %>%
unnest(cols = description) %>%
mutate(type.name = coalesce(type.name, "General")) %>%
select(iati_identifier, activity_title, type.name, narrative) %>%
filter(lengths(narrative) != 0) %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
unique()
# Summarise records with multiple "General" descriptions
activity_list_unnest_1 <- activity_list_unnest_1 %>%
group_by(iati_identifier, activity_title, type.name) %>%
summarise(text = paste(coalesce(text, ""), collapse = "\n\n")) %>%
spread(key = type.name, value = text) %>%
mutate(activity_description = if_else(!is.na(Objectives), paste0(General, "\n\n", Objectives), General)) %>%
ungroup()
# 2) Unlist recipient countries
activity_list_unnest_2 <- partner_activity_comb %>%
filter(lengths(recipient_country) != 0) %>%
unnest(cols = recipient_country) %>%
select(iati_identifier, country.name) %>%
group_by(iati_identifier) %>%
unique() %>%
summarise(country_name = paste(coalesce(country.name, ""), collapse = ", "))
# Identify activities without recipient countries at activity level
no_country_info <- partner_activity_comb %>%
filter(lengths(recipient_country) == 0)
# Prepare results data frame and counters
transaction_list <- data.frame()
# Run extraction, stopping when no new transactions are returned
for (id in no_country_info$iati_identifier) {
new_rows <- 0
page <- 1
while (page == 1 | new_rows > 0) {
print(paste0(id, "-", page))
x <- nrow(transaction_list)
transaction_list <- transactions_extract(id, page, transaction_list)
page <- page + 1
y <- nrow(transaction_list)
new_rows = y - x
}
}
# Subset fields
transaction_list_filtered <- transaction_list %>%
unnest(cols = description.narrative,
keep_empty = TRUE) %>%
select(iati_identifier, transaction_date, transaction_description = text,
currency.code, value, receiver_organisation.ref, receiver_organisation.narrative,
recipient_countries)
# Unnest country information -----
transactions_country <- transaction_list_filtered %>%
select(iati_identifier, recipient_countries, transaction_date, value) %>%
filter(lengths(recipient_countries) != 0) %>%
unnest(cols = recipient_countries) %>%
select(-country.url, -country.code) %>%
rename(recipient_country = country.name) %>%
filter(!is.na(recipient_country)) %>%
unique()
# Unnest recipient org information -----
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
filter(lengths(receiver_organisation.narrative) != 0) %>%
unnest(cols = receiver_organisation.narrative) %>%
select(-lang.code, -lang.name) %>%
rename(receiver_org = text) %>%
filter(!is.na(receiver_org)) %>%
unique()
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
filter(lengths(receiver_organisation.narrative) != 0)
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
filter(lengths(receiver_organisation.narrative) != 0) %>%
unnest(cols = receiver_organisation.narrative)
View(transactions_orgs)
# Summarise info for joining to main dataset
transactions_summarised <- transaction_list_filtered %>%
select(iati_identifier) %>%
unique() %>%
left_join((transactions_country %>%
select(-transaction_date, -value) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(recipient_country = paste(coalesce(recipient_country, ""), collapse = ", "))), by = "iati_identifier") %>%
left_join((transactions_orgs %>%
select(-transaction_date, -value) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(receiver_org = paste(coalesce(receiver_org, ""), collapse = ", "))), by = "iati_identifier")
# Unnest recipient org information -----
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
filter(lengths(receiver_organisation.narrative) != 0) %>%
# creates extra rows??
unnest(cols = receiver_organisation.narrative) %>%
select(-lang.code, -lang.name) %>%
rename(receiver_org = text) %>%
filter(!is.na(receiver_org)) %>%
unique()
# Summarise info for joining to main dataset
transactions_summarised <- transaction_list_filtered %>%
select(iati_identifier) %>%
unique() %>%
left_join((transactions_country %>%
select(-transaction_date, -value) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(recipient_country = paste(coalesce(recipient_country, ""), collapse = ", "))), by = "iati_identifier") %>%
left_join((transactions_orgs %>%
select(-transaction_date, -value) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(receiver_org = paste(coalesce(receiver_org, ""), collapse = ", "))), by = "iati_identifier")
# Join on transactions country info to rest of dataset
activity_list_unnest_2 <- partner_activity_comb %>%
select(iati_identifier) %>%
left_join(activity_list_unnest_2, by = "iati_identifier") %>%
left_join(transactions_summarised, by = "iati_identifier") %>%
mutate(recipient_country = coalesce(recipient_country, country_name)) %>%
select(-country_name)
# 3) Unlist sectors
activity_list_unnest_3 <- partner_activity_comb %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.name) %>%
filter(sector.name != "Vocabulary 99 or 98") %>%
group_by(iati_identifier) %>%
unique() %>%
summarise(sector_name = paste(coalesce(sector.name, ""), collapse = ", ")) %>%
ungroup()
# 4) Unlist implementing organisations
activity_list_unnest_4 <- partner_activity_comb %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
View(activity_list_base)
# 4) Unlist implementing organisations
activity_list_unnest_4 <- partner_activity_comb %>%
select(-activity_id) %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
activity_list_unnest_4 <- partner_activity_comb %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org)
View(partner_activity_comb)
# 4) Unlist implementing organisations
activity_list_unnest_4 <- partner_activity_comb %>%
select(-activity_id, ref, role.name) %>%  # newly added?
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
# 4) Unlist implementing organisations
activity_list_unnest_4 <- partner_activity_comb %>%
select(-activity_id, -ref, -role.name) %>%  # newly added?
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
# Add country locations based on IATI references or lookup
activity_list_unnest_4 <- activity_list_unnest_4 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(ref) & substr(ref,3,3) == "-" & !(substr(ref,1,2) %in% c("XI", "XM"))), substr(ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
# Take best of both country lookup results
mutate(org_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# Save implementing orgs with country to file
org_names_and_locations_1 <- activity_list_unnest_4 %>%
select(project_id = iati_identifier,
organisation_name = text,
organisation_country = org_country) %>%
mutate(organisation_role = 2)
# Collapse implementing orgs
activity_list_unnest_4_partner_names <- activity_list_unnest_4 %>%
select(iati_identifier, text) %>%
filter(!is.na(text)) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(partner = paste(coalesce(text, ""), collapse = ", "))
activity_list_unnest_4_partner_countries <- activity_list_unnest_4 %>%
select(iati_identifier, org_country) %>%
filter(!is.na(org_country)) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(partner_country = paste(coalesce(org_country, ""), collapse = ", "))
View(partner_activity_extract)
partner_activities_via_title <- org_activity_list %>%
filter(reporting_org.ref == "DAC-1601") %>%  # Gates org ID
unnest(cols = title.narrative) %>%
filter(str_detect(text, "FCDO|DFID")) %>%
mutate(gov_funder = "Foreign, Commonwealth and Development Office",
fund = "FCDO Research - Partnerships") %>%
select(iati_identifier, gov_funder, fund, text) %>%
unique()
partner_activities_via_funder <- org_activity_list %>%
unnest(cols = title.narrative) %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref, activity_id) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
# restrict to funding organisations and AgResults activities (pooled funding)
filter(role.name %in% c("Funding") |
str_detect(iati_identifier, "XI-IATI-AGR")
) %>%
unique() %>%
# restrict to UK gov funding
filter(ref == "GB-GOV-1" |
str_detect(text, "Britain|DFID|FCDO|DHSC|Department of Health and Social Care") |
str_detect(iati_identifier, "DFID") |
str_detect(iati_identifier, "XI-IATI-AGR")      # AgResults partially funded
) %>%
# define fund and funder
mutate(gov_funder = if_else(str_detect(text, "Health"), "Department of Health and Social Care",
"Foreign, Commonwealth and Development Office"),
fund = case_when(
# IDRC GAMRIF projects
str_detect(iati_identifier, "XM-DAC-301-2") & str_detect(text, "Health") ~ "Global Health Security - GAMRIF",
# Other DHSC partnerships
str_detect(text, "Health") ~ "Global Health Research - Partnerships",
# FCDO AgResults
str_detect(iati_identifier, "XI-IATI-AGR") ~ "FCDO Research - Partnerships",
TRUE ~ "FCDO Research - Programmes"
)) %>%
select(iati_identifier, activity_id, gov_funder, fund, text) %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove World Health Organisation non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(str_detect(iati_identifier, "XM-DAC-928")) |
str_detect(text, "research|innovation")) %>%
select(-text)
View(org_activity_list)
# Filter original data
partnership_activities <- org_activity_list %>%
inner_join(partnership_activities, by = "iati_identifier")
# Save to Rdata file
saveRDS(partnership_activities, file = "Outputs/partnership_activities.rds")
partner_activity_comb <- plyr::rbind.fill(partner_activity_extract, partnership_activities) %>%
filter(default_flow_type == "ODA" | is.na(default_flow_type))
# Extract base activity information - hierarchy and status
activity_list_base <- partner_activity_comb %>%
select(iati_identifier, hierarchy,
activity_status = activity_status.name,
activity_id,
gov_funder,
fund) %>%
# Join on fund/funder information
left_join(select(partner_iati_activity_ids, iati_id, gov_funder), by = c("iati_identifier" = "iati_id")) %>%
mutate(gov_funder = coalesce(gov_funder.x, gov_funder.y)) %>%
select(-gov_funder.x, -gov_funder.y) %>%
unique()
# 4) Unlist implementing organisations
activity_list_unnest_4 <- partner_activity_comb %>%
# select(-activity_id, -ref, -role.name) %>%  # newly added?
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
# 4) Unlist implementing organisations
activity_list_unnest_4 <- partner_activity_comb %>%
select(-activity_id) %>%  # newly added?
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
# Add country locations based on IATI references or lookup
activity_list_unnest_4 <- activity_list_unnest_4 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(ref) & substr(ref,3,3) == "-" & !(substr(ref,1,2) %in% c("XI", "XM"))), substr(ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
# Take best of both country lookup results
mutate(org_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# Save implementing orgs with country to file
org_names_and_locations_1 <- activity_list_unnest_4 %>%
select(project_id = iati_identifier,
organisation_name = text,
organisation_country = org_country) %>%
mutate(organisation_role = 2)
# Collapse implementing orgs
activity_list_unnest_4_partner_names <- activity_list_unnest_4 %>%
select(iati_identifier, text) %>%
filter(!is.na(text)) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(partner = paste(coalesce(text, ""), collapse = ", "))
activity_list_unnest_4_partner_countries <- activity_list_unnest_4 %>%
select(iati_identifier, org_country) %>%
filter(!is.na(org_country)) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(partner_country = paste(coalesce(org_country, ""), collapse = ", "))
# Combine in single dataset
activity_list_unnest_4 <- activity_list_unnest_4 %>%
select(iati_identifier) %>%
unique() %>%
left_join(activity_list_unnest_4_partner_names, by = "iati_identifier") %>%
left_join(activity_list_unnest_4_partner_countries, by = "iati_identifier")
