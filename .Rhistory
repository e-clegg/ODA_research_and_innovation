currency.code, value, receiver_organisation.ref, receiver_organisation.narrative,
recipient_countries)
test0 <- filter(ri_linked_activites, str_detect(iati_id, "GB-CHC-287287-DfID-PEDL"))
test1 <- filter(partner_activity_comb, str_detect(iati_identifier, "GB-CHC-287287-DfID-PEDL"))
test2 <- filter(no_country_info, str_detect(iati_identifier, "GB-CHC-287287-DfID-PEDL"))
test3 <- filter(transaction_list, str_detect(iati_identifier, "GB-CHC-287287-DfID-PEDL"))
# Unnest country information -----
transactions_country <- transaction_list_filtered %>%
select(iati_identifier, recipient_countries, transaction_date, value) %>%
filter(lengths(recipient_countries) != 0) %>%
unnest(cols = recipient_countries) %>%
select(-country.url, -country.code) %>%
rename(recipient_country = country.name) %>%
filter(!is.na(recipient_country)) %>%
unique()
# Unnest recipient org information -----
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
filter(lengths(receiver_organisation.narrative) != 0) %>%
unnest(cols = receiver_organisation.narrative) %>%
rename(receiver_org = text) %>%
filter(!is.na(receiver_org)) %>%
unique()
# Save transaction dataset
transaction_list_to_save <- transaction_list_filtered %>%
select(-recipient_countries, -receiver_organisation.ref, -receiver_organisation.narrative) %>%
left_join(transactions_country, by = c("iati_identifier", "transaction_date", "value")) %>%
left_join(transactions_orgs, by = c("iati_identifier", "transaction_date", "value"))
# Save transaction dataset
transaction_list_to_save <- transaction_list_filtered %>%
select(-recipient_countries, -receiver_organisation.ref, -receiver_organisation.narrative) %>%
left_join(transactions_country, by = c("iati_identifier", "transaction_date", "value"))
View(transactions_orgs)
# Unnest recipient org information -----
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
filter(lengths(receiver_organisation.narrative) != 0) %>%
unnest(cols = receiver_organisation.narrative) %>%
select(-lang.code, -lang.name) %>%
rename(receiver_org = text) %>%
filter(!is.na(receiver_org)) %>%
unique()
# Save transaction dataset
transaction_list_to_save <- transaction_list_filtered %>%
select(-recipient_countries, -receiver_organisation.ref, -receiver_organisation.narrative) %>%
left_join(transactions_country, by = c("iati_identifier", "transaction_date", "value")) %>%
left_join(transactions_orgs, by = c("iati_identifier", "transaction_date", "value"))
View(transaction_list_filtered)
# Save transaction dataset
transaction_list_to_save <- transaction_list_filtered %>%
select(-recipient_countries, -receiver_organisation.ref, -receiver_organisation.narrative) %>%
unique() %>%
left_join(transactions_country, by = c("iati_identifier", "transaction_date", "value")) %>%
left_join(transactions_orgs, by = c("iati_identifier", "transaction_date", "value"))
# Unnest country information -----
transactions_country <- transaction_list_filtered %>%
select(iati_identifier, recipient_countries, transaction_date, value) %>%
# filter(lengths(recipient_countries) != 0) %>%
unnest(cols = recipient_countries) %>%
select(-country.url, -country.code) %>%
rename(recipient_country = country.name) %>%
filter(!is.na(recipient_country)) %>%
unique()
# Unnest recipient org information -----
transactions_orgs <- transaction_list_filtered %>%
select(iati_identifier, receiver_organisation.narrative, transaction_date, value) %>%
#  filter(lengths(receiver_organisation.narrative) != 0) %>%
unnest(cols = receiver_organisation.narrative) %>%
select(-lang.code, -lang.name) %>%
rename(receiver_org = text) %>%
filter(!is.na(receiver_org)) %>%
unique()
# Summarise info for joining to main dataset
transactions_summarised <- transaction_list_filtered %>%
select(iati_identifier) %>%
unique() %>%
left_join((transactions_country %>%
select(-transaction_date, -value) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(recipient_country = paste(coalesce(recipient_country, ""), collapse = ", "))), by = "iati_identifier") %>%
left_join((transactions_orgs %>%
select(-transaction_date, -value) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(receiver_org = paste(coalesce(receiver_org, ""), collapse = ", "))), by = "iati_identifier")
# Join on transactions country info to rest of dataset
activity_list_unnest_2 <- partner_activity_comb %>%
select(iati_identifier) %>%
left_join(activity_list_unnest_2, by = "iati_identifier") %>%
left_join(transactions_summarised, by = "iati_identifier") %>%
mutate(recipient_country = coalesce(recipient_country, country_name)) %>%
select(-country_name)
# 3) Unlist sectors
activity_list_unnest_3 <- partner_activity_comb %>%
#  filter(lengths(sector) != 0) %>%
unnest(cols = sector,
keep_empty = TRUE) %>%
select(iati_identifier, sector.name) %>%
filter(sector.name != "Vocabulary 99 or 98") %>%
group_by(iati_identifier) %>%
unique() %>%
summarise(sector_name = paste(coalesce(sector.name, ""), collapse = ", "))
# 3) Unlist sectors
activity_list_unnest_3 <- partner_activity_comb %>%
filter(lengths(sector) != 0) %>%
unnest(cols = sector) %>%
select(iati_identifier, sector.name) %>%
filter(sector.name != "Vocabulary 99 or 98") %>%
group_by(iati_identifier) %>%
unique() %>%
summarise(sector_name = paste(coalesce(sector.name, ""), collapse = ", ")) %>%
ungroup()
# 4) Unlist organisations
activity_list_unnest_4 <- partner_activity_comb %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
# 4) Unlist organisations
activity_list_unnest_4 <- partner_activity_comb %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref) %>%
filter(lengths(narrative) != 0,
role.name == "Implementing") %>%
unnest(cols = narrative) %>%
filter(lang.name == "English") %>%
select(-lang.code, -lang.name) %>%
unique()
# Add country locations based on IATI references or lookup
activity_list_unnest_4 <- activity_list_unnest_4 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(ref) & substr(ref,3,3) == "-" & !(substr(ref,1,2) %in% c("XI", "XM"))), substr(ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(text, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
# Take best of both country lookup results
mutate(org_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# Save implementing orgs with country to file
org_names_and_locations_1 <- activity_list_unnest_4 %>%
select(project_id = iati_identifier,
organisation_name = text,
organisation_country = org_country) %>%
mutate(organisation_role = 2)
# Collapse implementing orgs
activity_list_unnest_4_partner_names <- activity_list_unnest_4 %>%
select(iati_identifier, text) %>%
filter(!is.na(text)) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(partner = paste(coalesce(text, ""), collapse = ", "))
activity_list_unnest_4_partner_countries <- activity_list_unnest_4 %>%
select(iati_identifier, org_country) %>%
filter(!is.na(org_country)) %>%
unique() %>%
group_by(iati_identifier) %>%
summarise(partner_country = paste(coalesce(org_country, ""), collapse = ", "))
# Combine in single dataset
activity_list_unnest_4_final <- activity_list_unnest_4 %>%
select(iati_identifier) %>%
unique() %>%
left_join(activity_list_unnest_4_partner_names, by = "iati_identifier") %>%
left_join(activity_list_unnest_4_partner_countries, by = "iati_identifier")
# 5) Unlist publishing org
activity_list_unnest_5 <- partner_activity_comb %>%
filter(lengths(reporting_org.narrative) != 0) %>%
unnest(cols = reporting_org.narrative) %>%
select(iati_identifier,
reporting_org_ref = reporting_org.ref,
reporting_org = text) %>%
# take top (English) name in cases of different languages
group_by(iati_identifier, reporting_org_ref, reporting_org_type) %>%
slice(1) %>%
unique() %>%
ungroup()
# 5) Unlist publishing org
activity_list_unnest_5 <- partner_activity_comb %>%
filter(lengths(reporting_org.narrative) != 0) %>%
unnest(cols = reporting_org.narrative) %>%
select(iati_identifier,
reporting_org_ref = reporting_org.ref,
reporting_org = text) %>%
# take top (English) name in cases of different languages
group_by(iati_identifier, reporting_org_ref) %>%
slice(1) %>%
unique() %>%
ungroup()
# Lookup country
activity_list_unnest_5 <- activity_list_unnest_5 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(ref) & substr(ref,3,3) == "-" & !(substr(ref,1,2) %in% c("XI", "XM"))),
substr(ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(reporting_org, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
# Take best of both country lookup results
mutate(reporting_org_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# Lookup country
activity_list_unnest_5 <- activity_list_unnest_5 %>%
# Extract 2 digit country code from org references (where populated)
mutate(country_code = if_else((!is.na(reporting_org_ref) & substr(reporting_org_ref,3,3) == "-" & !(substr(reporting_org_ref,1,2) %in% c("XI", "XM"))),
substr(reporting_org_ref,1,2), "")) %>%
# Look up country from both country code and organisation name
mutate(org_country_iati = map(country_code, country_code_to_name),
org_country_other = map(reporting_org, org_country_lookup)) %>%
mutate(org_country_iati = unlist(org_country_iati),
org_country_other = unlist(org_country_other)) %>%
# Take best of both country lookup results
mutate(reporting_org_country = coalesce(org_country_iati, org_country_other)) %>%
select(-org_country_iati, -org_country_other)
# Add on to org file to save
org_names_and_locations_1 <- org_names_and_locations_1 %>%
rbind(activity_list_unnest_5 %>%
select(project_id = iati_identifier,
organisation_name = reporting_org,
organisation_country = reporting_org_country) %>%
mutate(organisation_role = 1) %>% # leading
unique())
# 6) Unlist and aggregate budget
activity_list_unnest_6 <- partner_activity_comb %>%
filter(lengths(budget) != 0) %>%
unnest(cols = budget) %>%
select(iati_identifier,
budget_status = status.name,
amount = value.value,
currency = value.currency.code,
period_start,
period_end)
# Find activities with multiple budgets for same period (i.e. indicative and committed)
multiple_budgets <- activity_list_unnest_6 %>%
select(iati_identifier, budget_status, period_start, period_end) %>%
unique() %>%
group_by(iati_identifier, period_start, period_end) %>%
summarise(count = n()) %>%
filter (count > 1)
View(multiple_budgets)
# Keep only the committed budget in these cases
activity_list_unnest_6 <- activity_list_unnest_6 %>%
filter(!(iati_identifier %in% multiple_budgets$iati_identifier) |
budget_status == "Committed")
# Sum to get total budget per activity
activity_list_unnest_6 <- activity_list_unnest_6 %>%
group_by(iati_identifier, currency) %>%
summarise(period_start = min(period_start),
period_end = max(period_end),
amount = sum(amount))
test <- filter(activity_list_unnest_6, iati_id == "GB-COH-3195485-E3490")
test <- filter(activity_list_unnest_6, iati_identifier == "GB-COH-3195485-E3490")
View(test)
# 7) Unlist start/end dates
activity_list_unnest_7 <- partner_activity_comb %>%
unnest(cols = activity_date) %>%
select(iati_identifier,
date = iso_date,
date_type = type.name) %>%
# take the first date in cases of two of the same time
group_by(iati_identifier, date_type) %>%
slice(1) %>%
spread(key = date_type, value = date) %>%
mutate(start_date = coalesce(`Actual start`, `Planned start`),
end_date = coalesce(`Actual end`, `Planned End`)) %>%
select(iati_identifier, start_date, end_date)
# Combine in single dataset
activity_list_unnest_4 <- activity_list_unnest_4 %>%
select(iati_identifier) %>%
unique() %>%
left_join(activity_list_unnest_4_partner_names, by = "iati_identifier") %>%
left_join(activity_list_unnest_4_partner_countries, by = "iati_identifier")
# Join unnested info to original data
activity_list <- activity_list_base %>%
left_join(activity_list_unnest_1, by = "iati_identifier") %>%
left_join(activity_list_unnest_2, by = "iati_identifier") %>%
left_join(activity_list_unnest_3, by = "iati_identifier") %>%
left_join(activity_list_unnest_4, by = "iati_identifier") %>%
left_join(activity_list_unnest_5, by = "iati_identifier") %>%
left_join(activity_list_unnest_6, by = "iati_identifier") %>%
left_join(activity_list_unnest_7, by = "iati_identifier")
test <- filter(activity_list, is.na(reporting_org))
View(test)
# Assign a reporting org name if missing
activity_list <- activity_list %>%
mutate(reporting_org = coalesce(reporting_org, reporting_org_ref, gov_funder))
# Reorder columns and add date of refresh
activity_list <- activity_list %>%
select(iati_identifier, reporting_org_ref, reporting_org, reporting_org_country,
hierarchy, activity_status, fcdo_activity_id,
activity_title, activity_description, start_date, end_date,
recipient_country, sector_code, sector_name,
partner, partner_country,
gov_funder, fund,
amount, period_start, period_end, currency) %>%
unique() %>%
mutate(refresh_date = Sys.Date())
# Reorder columns and add date of refresh
activity_list <- activity_list %>%
select(iati_identifier, reporting_org_ref, reporting_org, reporting_org_country,
hierarchy, activity_status, fcdo_activity_id,
activity_title, activity_description, start_date, end_date,
recipient_country, sector_name,
partner, partner_country,
gov_funder, fund,
amount, period_start, period_end, currency) %>%
unique() %>%
mutate(refresh_date = Sys.Date())
# Read in linked partner IATI activity info from script 1
ri_linked_activites <- readRDS(file = "Outputs/ri_linked_activites.rds")
partner_activity_extract <- readRDS(file = "Outputs/partner_activity_extract.rds")
org_code <- c(
"XM-DAC-47015", # CGIAR
"XM-DAC-301-2", # IDRC
"XI-IATI-CABI", # CABI
"XM-DAC-928",   # WHO
"DAC-1601",     # Bill & Melinda Gates Foundation
"XI-IATI-AGR"   # AgResults (Consortium)
)
# Prepare results data frame and counters
org_activity_list <- data.frame()
# Run extraction
for (org in org_code) {
new_rows <- 0
page <- 1
while (page == 1 | new_rows > 0) {
print(paste0(org, "-", page))
x <- nrow(org_activity_list)
tryCatch({
org_activity_list <- org_activity_extract(page, org, org_activity_list)
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
page <- page + 1
y <- nrow(org_activity_list)
new_rows = y - x
}
}
partner_activities_via_title_gates <- org_activity_list %>%
filter(reporting_org.ref == "DAC-1601") %>%
unnest(cols = title.narrative) %>%
filter(str_detect(text, "FCDO|DFID")) %>%
mutate(gov_funder = "Foreign, Commonwealth and Development Office",
fund = "FCDO Research - Partnerships") %>%
select(iati_identifier, gov_funder, fund) %>%
unique()
table(org_activity_list$reporting_org.ref)
saveRDS(org_activity_list, "Outputs/org_activity_list.rds")
partner_activities_via_funder <- org_activity_list %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref, activity_id) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
# restrict to funding organisations and AgResults activities (pooled funding)
filter(role.name %in% c("Funding") |
str_detect(iati_identifier, "XI-IATI-AGR")
) %>%
unique() %>%
# restrict to UK gov funding
filter(ref == "GB-GOV-1" |
str_detect(text, "Britain|DFID|FCDO|DHSC|Department of Health and Social Care") |
str_detect(iati_identifier, "DFID") |
str_detect(iati_identifier, "XI-IATI-AGR")      # AgResults partially funded
) %>%
# define fund and funder
mutate(gov_funder = if_else(str_detect(text, "Health"), "Department of Health and Social Care",
"Foreign, Commonwealth and Development Office"),
fund = case_when(
# IDRC GAMRIF projects
str_detect(iati_identifier, "XM-DAC-301-2") & str_detect(text, "Health") ~ "Global Health Security - GAMRIF",
# Other DHSC partnerships
str_detect(text, "Health") ~ "Global Health Research - Partnerships",
# FCDO AgResults
str_detect(iati_identifier, "XI-IATI-AGR") ~ "FCDO Research - Partnerships",
TRUE ~ "FCDO Research - Programmes"
)) %>%
select(iati_identifier, activity_id, gov_funder, fund) %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove WHO non-research/innovation activities
partnership_activities <- partnership_activities %>%
unnest(cols = title.narrative) %>%
filter(!(reporting_org.ref == "XM-DAC-928") |
str_detect(text, "research|innovation"))
# Filter original data
partnership_activities <- org_activity_list %>%
inner_join(partnership_activities, by = "iati_identifier")
partner_activities_via_title <- org_activity_list %>%
filter(reporting_org.ref == "DAC-1601") %>%
unnest(cols = title.narrative) %>%
filter(str_detect(text, "FCDO|DFID")) %>%
mutate(gov_funder = "Foreign, Commonwealth and Development Office",
fund = "FCDO Research - Partnerships") %>%
select(iati_identifier, gov_funder, fund) %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove WHO non-research/innovation activities
partnership_activities <- partnership_activities %>%
unnest(cols = title.narrative) %>%
filter(!(reporting_org.ref == "XM-DAC-928") |
str_detect(text, "research|innovation"))
# Filter original data
partnership_activities <- org_activity_list %>%
inner_join(partnership_activities, by = "iati_identifier")
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove WHO non-research/innovation activities
partnership_activities <- partnership_activities %>%
unnest(cols = title.narrative) %>%
filter(!(reporting_org.ref == "XM-DAC-928") |
str_detect(text, "research|innovation"))
partner_activities_via_funder <- org_activity_list %>%
unnest(cols = title.narrative) %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref, activity_id) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
# restrict to funding organisations and AgResults activities (pooled funding)
filter(role.name %in% c("Funding") |
str_detect(iati_identifier, "XI-IATI-AGR")
) %>%
unique() %>%
# restrict to UK gov funding
filter(ref == "GB-GOV-1" |
str_detect(text, "Britain|DFID|FCDO|DHSC|Department of Health and Social Care") |
str_detect(iati_identifier, "DFID") |
str_detect(iati_identifier, "XI-IATI-AGR")      # AgResults partially funded
) %>%
# define fund and funder
mutate(gov_funder = if_else(str_detect(text, "Health"), "Department of Health and Social Care",
"Foreign, Commonwealth and Development Office"),
fund = case_when(
# IDRC GAMRIF projects
str_detect(iati_identifier, "XM-DAC-301-2") & str_detect(text, "Health") ~ "Global Health Security - GAMRIF",
# Other DHSC partnerships
str_detect(text, "Health") ~ "Global Health Research - Partnerships",
# FCDO AgResults
str_detect(iati_identifier, "XI-IATI-AGR") ~ "FCDO Research - Partnerships",
TRUE ~ "FCDO Research - Programmes"
)) %>%
select(iati_identifier, activity_id, gov_funder, fund) %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove WHO non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(reporting_org.ref == "XM-DAC-928") |
str_detect(text, "research|innovation"))
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove WHO non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(str_detect(iati_identifier, "XM-DAC-928")) |
str_detect(text, "research|innovation"))
partner_activities_via_title <- org_activity_list %>%
filter(reporting_org.ref == "DAC-1601") %>%
unnest(cols = title.narrative) %>%
filter(str_detect(text, "FCDO|DFID")) %>%
mutate(gov_funder = "Foreign, Commonwealth and Development Office",
fund = "FCDO Research - Partnerships") %>%
select(iati_identifier, gov_funder, fund, text) %>%
unique()
partner_activities_via_funder <- org_activity_list %>%
unnest(cols = title.narrative) %>%
filter(lengths(participating_org) != 0) %>%
unnest(cols = participating_org) %>%
select(iati_identifier, role.name, narrative, ref, activity_id) %>%
unnest(cols = narrative) %>%
select(-lang.code, -lang.name) %>%
# restrict to funding organisations and AgResults activities (pooled funding)
filter(role.name %in% c("Funding") |
str_detect(iati_identifier, "XI-IATI-AGR")
) %>%
unique() %>%
# restrict to UK gov funding
filter(ref == "GB-GOV-1" |
str_detect(text, "Britain|DFID|FCDO|DHSC|Department of Health and Social Care") |
str_detect(iati_identifier, "DFID") |
str_detect(iati_identifier, "XI-IATI-AGR")      # AgResults partially funded
) %>%
# define fund and funder
mutate(gov_funder = if_else(str_detect(text, "Health"), "Department of Health and Social Care",
"Foreign, Commonwealth and Development Office"),
fund = case_when(
# IDRC GAMRIF projects
str_detect(iati_identifier, "XM-DAC-301-2") & str_detect(text, "Health") ~ "Global Health Security - GAMRIF",
# Other DHSC partnerships
str_detect(text, "Health") ~ "Global Health Research - Partnerships",
# FCDO AgResults
str_detect(iati_identifier, "XI-IATI-AGR") ~ "FCDO Research - Partnerships",
TRUE ~ "FCDO Research - Programmes"
)) %>%
select(iati_identifier, activity_id, gov_funder, fund, text) %>%
unique()
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
# Remove WHO non-research/innovation activities
partnership_activities <- partnership_activities %>%
filter(!(str_detect(iati_identifier, "XM-DAC-928")) |
str_detect(text, "research|innovation"))
# Combine 2A and 2B
partnership_activities <- plyr::rbind.fill(partner_activities_via_title, partner_activities_via_funder)
