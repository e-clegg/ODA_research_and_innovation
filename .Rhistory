unique()
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id"))
ukri_iati_projects <- iati_activity_list %>%
filter(extending_org == "UK Research & Innovation") %>%
mutate(gtr_id = str_replace(iati_identifier, "GB-GOV-13-FUND--GCRF-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "GB-GOV-13-FUND--Newton-", "")) %>%
select(gtr_id, iati_country = recipient_country) %>%
unique()
ukri_projects_final <- readRDS("Outputs/ukri_projects_final.rds")
ukri_iati_projects <- iati_activity_list %>%
filter(extending_org == "UK Research & Innovation") %>%
mutate(gtr_id = str_replace(iati_identifier, "GB-GOV-13-FUND--GCRF-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "GB-GOV-13-FUND--Newton-", "")) %>%
select(gtr_id, iati_country = recipient_country) %>%
unique()
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
# Keep required fields
iati_projects_final <- iati_projects %>%
mutate(Funder = coalesce(gov_funder, reporting_org),
partner_org_name = partner,
partner_org_country = partner_country,
lead_org_name = coalesce(extending_org, reporting_org),
lead_org_country = "",
extending_org = coalesce(extending_org, reporting_org),
status = if_else(!is.na(end_date),
if_else(Sys.Date() <= end_date, "Active", "Closed"), "Unknown"),
last_updated = quarter_end_date) %>%
select(id = iati_identifier,
title = activity_title,
abstract = activity_description,
start_date,
end_date,
amount,
period_start,
period_end,
currency,
extending_org,
lead_org_name,
lead_org_country,
partner_org_name,
partner_org_country,
iati_id = programme_id,
Fund = fund,
Funder,
recipient_country,
subject = sector_name,
status,
last_updated
)
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
# Keep required fields
iati_projects_final <- iati_projects %>%
mutate(Funder = coalesce(gov_funder, reporting_org),
partner_org_name = partner,
partner_org_country = partner_country,
lead_org_name = coalesce(extending_org, reporting_org),
lead_org_country = "",
extending_org = coalesce(extending_org, reporting_org),
status = if_else(!is.na(end_date),
if_else(Sys.Date() <= end_date, "Active", "Closed"), "Unknown"),
last_updated = quarter_end_date) %>%
select(id = iati_identifier,
title = activity_title,
abstract = activity_description,
start_date,
end_date,
amount,
period_start,
period_end,
currency,
extending_org,
lead_org_name,
lead_org_country,
partner_org_name,
partner_org_country,
iati_id = programme_id,
Fund = fund,
Funder,
recipient_country,
subject = sector_name,
status,
last_updated
)
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id"))
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country)) %>%
select(-iati_country)
ukri_projects_final <- readRDS("Outputs/ukri_projects_final.rds")
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country)) %>%
select(-iati_country)
table(ukri_projects_final$recipient_country)
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country)) %>%
select(-iati_country)
table(ukri_projects_final$recipient_country)
ukri_iati_projects <- iati_activity_list %>%
filter(extending_org == "UK Research & Innovation") %>%
mutate(gtr_id = str_replace(iati_identifier, "GB-GOV-13-FUND--GCRF-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "GB-GOV-13-FUND--Newton-", "")) %>%
select(gtr_id, iati_country = recipient_country) %>%
unique()
table(ukri_iati_projects$iati_country)
ukri_projects_final <- readRDS("Outputs/ukri_projects_final.rds")
ukri_projects_final <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country))
table(ukri_iati_projects$recipient_country)
table(ukri_projects_final$recipient_country)
ukri_projects_final <- readRDS("Outputs/ukri_projects_final.rds")
ukri_projects_with_countries <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id"))
View(ukri_projects_with_countries)
ukri_iati_projects <- iati_activity_list %>%
filter(extending_org == "UK Research & Innovation") %>%
mutate(gtr_id = str_replace(iati_identifier, "GB-GOV-13-FUND--GCRF-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "GB-GOV-13-FUND--Newton-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "_", "/")) %>%
select(gtr_id, iati_country = recipient_country) %>%
unique()
ukri_projects_with_countries <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country)) %>%
select(-iati_country)
table(ukri_projects_with_countries$recipient_country)
ukri_projects_with_countries <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id"))
View(ukri_projects_with_countries)
ukri_iati_projects <- iati_activity_list %>%
filter(extending_org == "UK Research & Innovation") %>%
mutate(gtr_id = str_replace(iati_identifier, "GB-GOV-13-FUND--GCRF-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "GB-GOV-13-FUND--Newton-", "")) %>%
mutate(gtr_id = str_replace_all(gtr_id, "_", "/")) %>%
select(gtr_id, iati_country = recipient_country) %>%
unique()
ukri_projects_with_countries <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country)) %>%
select(-iati_country)
table(ukri_projects_with_countries$recipient_country)
ukri_iati_projects <- iati_activity_list %>%
filter(extending_org == "UK Research & Innovation") %>%
mutate(gtr_id = str_replace(iati_identifier, "GB-GOV-13-FUND--GCRF-", "")) %>%
mutate(gtr_id = str_replace(gtr_id, "GB-GOV-13-FUND--Newton-", "")) %>%
mutate(gtr_id = str_replace_all(gtr_id, "_", "/")) %>%
select(gtr_id, iati_country = recipient_country) %>%
filter(!is.na(iati_country)) %>%
unique()
ukri_projects_with_countries <- ukri_projects_final %>%
left_join(ukri_iati_projects, by = c("id" = "gtr_id")) %>%
mutate(recipient_country = coalesce(iati_country, recipient_country)) %>%
select(-iati_country)
# Keep required fields
iati_projects_final <- iati_projects %>%
mutate(Funder = coalesce(gov_funder, reporting_org),
partner_org_name = partner,
partner_org_country = partner_country,
lead_org_name = coalesce(extending_org, reporting_org),
lead_org_country = "",
extending_org = coalesce(extending_org, reporting_org),
status = if_else(!is.na(end_date),
if_else(Sys.Date() <= end_date, "Active", "Closed"), "Unknown"),
last_updated = quarter_end_date) %>%
select(id = iati_identifier,
title = activity_title,
abstract = activity_description,
start_date,
end_date,
amount,
period_start,
period_end,
currency,
extending_org,
lead_org_name,
lead_org_country,
partner_org_name,
partner_org_country,
iati_id = programme_id,
Fund = fund,
Funder,
recipient_country,
subject = sector_name,
status,
last_updated
)
# Add IATI link to awards
iati_projects_final <- iati_projects_final %>%
mutate(link = paste0("https://d-portal.org/ctrack.html#view=act&aid=", id))
# Clean up
rm(iati_activity_list)
rm(partner_iati_list)
rm(iati_projects)
# Add missing fields and format Funder/Fund field
wellcome_grants_formatted <- wellcome_grants %>%
mutate(status = if_else(Sys.Date() <= `Planned Dates:End Date`, "Active", "Closed"),
extending_org = "Wellcome Trust",
currency = "GBP",
partner_org_name = `Other Implementing Organisations`,
partner_org_country = `Research Location Countries`,
recipient_country = "",
period_start = "",
period_end = "",
iati_id = "",
Funder = if_else(str_detect(`Co-funder`, "National Institute for Health Research"),
"Department of Health and Social Care", `Co-funder`),
Fund = if_else(Funder == "Department of Health and Social Care",
"Global Health Research - Partnerships", "FCDO Research - Programmes"),
last_updated = quarter_end_date)
# Select desired variables
wellcome_grants_formatted <- wellcome_grants_formatted %>%
select(id = `Internal ID`,
title = Title,
abstract = Description,
start_date = `Planned Dates:Start Date`,
end_date = `Planned Dates:End Date`,
amount = `ODA funding`,
period_start,
period_end,
currency,
extending_org,
lead_org_name = `Recipient Org:Name`,
lead_org_country = `Recipient Org:Country`,
partner_org_name,
partner_org_country,
iati_id,
Fund,
Funder,
recipient_country,
subject = `Partnership Name`,
status,
last_updated
)
# Format date fields for merging
wellcome_grants_final <- wellcome_grants_formatted %>%
mutate(start_date = as.character(start_date),
end_date = as.character(end_date),
link = "https://wellcome.org/grant-funding/funded-people-and-projects")
rm(wellcome_grants)
rm(wellcome_grants_formatted)
# Detect all Excel files in Data folder
path = "Inputs//IATI returns"
file_list <- list.files(path = path, pattern='*.xlsx', full.names = TRUE)
# Read all files into R (skipping first 28 lines in Excel sheet as this contains no data)
data_list <- lapply(file_list,
read_excel,
sheet = 2)
# Bind the rows, adding an ID field for the Excel file number
partner_spreadsheet_data <- bind_rows(data_list, .id = "file_number")
# Reformat to match other dataset
collated_spreadsheet_data <- partner_spreadsheet_data %>%
rename(id = `Extending organisation - award ID`,
title = `Award title`,
abstract = `Award description`,
start_date = `Start date`,
end_date = `End date`,
amount = `Award amount (Â£)`,
recipient_country = `Beneficiary country`,
extending_org = `Extending organisation - name`,
lead_org_name = `Lead organisation - name`,
lead_org_country = `Lead organisation - country`,
partner_org_name = `Implementing partner(s) - name`,
partner_org_country = `Implementing partner(s) - country`,
iati_id = `Funder programme - IATI ID`,
link = `Data source`
) %>%
mutate(start_date = as.character(start_date),
end_date = as.character(end_date),
currency = coalesce(Currency, "GBP"),
period_start = "",
period_end = "",
subject = "",
status = coalesce(if_else(end_date >= Sys.Date(), "Active", "Closed"), "Unknown"),
last_updated = quarter_end_date
) %>%
select(-`No.`, -`Funder programme - name`, -Notes, -file_number, -Currency,
-`Aims/Objectives`, -`Investigator(s) - name`, -`FCDO programme - name`,
-`FCDO programme - IATI ID`, -Link)
# Save as R file (to read back in if needed)
saveRDS(collated_spreadsheet_data, file = "Outputs/collated_spreadsheet_data.rds")
rm(partner_spreadsheet_data)
rm(data_list)
rm(file_list)
# Reformat to match other datasetS
roda_extract_gcrf_final <- roda_extract_gcrf %>%
rename(id = `Extending organisation - award ID`,
abstract = `Award description`,
title = `Award title`,
amount = `Award amount (Â£)`,
recipient_country = `Beneficiary country`,
extending_org = `Extending organisation - name`,
lead_org_name = `Lead organisation - name`,
lead_org_country = `Lead organisation - country`,
partner_org_name = `Implementing partner(s) - name`,
partner_org_country = `Implementing partner(s) - country`,
iati_id = `Funder programme - IATI ID`,
link = `Data source`
) %>%
mutate(start_date = as.character(as.Date(`Start date`, "%d %B %Y")),
end_date = as.character(as.Date(`End date`, "%d %B %Y")),
currency = coalesce(Currency, "GBP"),
status = if_else(`Status` %in% c("Spend in progress", "Agreement in place", "Delivery", "Finalisation"), "Active",
if_else(`Status` %in% c("Completed"), "Closed",
if_else(`Status` %in% c("Cancelled"), "Cancelled", "Unknown"))),
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date
) %>%
# suppress display of end dates that have passed
mutate(end_date = if_else(Sys.Date() <= end_date, end_date, "")) %>%
# remove unecessary variables
select(-`No.`, -Currency, -`Aims/Objectives`, -`Investigator(s) - name`,  -Status,
-`Start date`, -`End date`)
roda_extract_newton_final <- roda_extract_newton %>%
rename(id = ID,
title = Title,
abstract = Description,
amount = `Value (Indicative)`,
recipient_country = `Recipient country`,
extending_org = `Lead Organisation`) %>%
mutate(Fund = "Newton Fund",
Funder = "Department for Business, Energy and Industrial Strategy",
lead_org_name = "",
lead_org_country = "",
partner_org_name = "",
partner_org_country = "",
iati_id = "",
link = "",
start_date = as.character(as.Date(coalesce(`Actual start date`, `Planned start date`), "%d %B %Y")),
end_date = as.character(as.Date(coalesce(`Actual end date`, `Planned end date`), "%d %B %Y")),
currency = "GBP",
period_start = "",
period_end = "",
subject = "",
last_updated = quarter_end_date) %>%
mutate(status = if_else(!is.na(end_date),
if_else(Sys.Date() <= end_date, "Active", "Closed"), "Unknown")) %>%
# suppress display of end dates that have passed
mutate(end_date = if_else(Sys.Date() <= end_date, end_date, "")) %>%
select(-`Delivery partner`, -`Recipient region`, -`Planned start date`,
-`Planned end date`, -`Actual start date`, -`Actual end date`)
rm(roda_extract_gcrf)
rm(roda_extract_newton)
all_projects <- rbind(ukri_projects_with_countries, nihr_projects_final,
iati_projects_final, wellcome_grants_final,
collated_spreadsheet_data,
roda_extract_gcrf_final, roda_extract_newton_final) %>%
unique()
# Save as R file (to read back in if needed)
saveRDS(all_projects, file = "Outputs/all_projects.rds")
# Read in data from script 3
all_projects <- readRDS("Outputs/all_projects.rds")
# Distinguish location and beneficiary countries in main dataset
all_projects_final <- all_projects %>%
mutate(location_country = paste0(coalesce(lead_org_country, ""), ", ", coalesce(partner_org_country, "")),
beneficiary_country = recipient_country)
# Convert location vs. beneficiary country data to long format
countries_data <- all_projects_final %>%
select(id, beneficiary_country, location_country) %>%
gather(key = "country_type", value = "Country", -id) %>%
right_join(select(all_projects_final, -beneficiary_country, -location_country), by = "id")
# Convert dataset to long with one row per country entry
all_projects_split_country <- countries_data %>%
select(id, extending_org, country_type, Country) %>%
mutate(Country = str_replace_all(Country, "Tanzania, United Republic Of|Tanzania, United Republic of", "Tanzania"),
Country = if_else(Country %in% c("Congo (the Democratic Republic of the)", "DRC"),
"Democratic Republic of the Congo", Country)) %>%
mutate(Country = str_replace_all(Country, ";", ",")) %>%
mutate(Country = gsub("\\s*\\([^\\)]+\\)","", as.character(Country))) %>%
separate_rows(Country, sep = ",", convert = FALSE)
# Clean country field
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = str_trim(Country)) %>%
mutate(Country = str_replace_all(Country, c("UK|Scotland|Wales|United kingdom|England|Northern Ireland|UNITED KINGDOM"), "United Kingdom"),
Country = str_replace_all(Country, c("USA|Usa|UNITED STATES|United states|United States Of America"), "United States"),
Country = str_replace(Country, "N/A", "Unknown"),
Country = str_replace(Country, "The Netherlands", "Netherlands"),
Country = str_replace(Country, "The Philippines", "Philippines"),
Country = if_else(str_detect(Country, "Ivoire"), "Ivory Coast", Country),
Country = str_replace(Country, "Republic of Congo", "Congo Republic"),
Country = if_else(str_detect(Country, "Hong Kong"), "Hong Kong", Country),
Country = if_else(str_detect(Country, "Viet Nam"), "Vietnam", Country)) %>%
unique() %>%
filter(!(Country %in% c("", "NA", "Unknown")) & !is.na(Country)) %>%
arrange(id)
# Check countries that are unmatched (this information will be overwritten)
unmatched_countries <- all_projects_split_country %>%
filter(!(Country %in% dac_lookup$country_name)) %>%
select(Country) %>%
unique()
# Replace country with "Unknown" if not recognised against Tableau's accepted list
all_projects_split_country <- all_projects_split_country %>%
mutate(Country = if_else(Country %in% dac_lookup$country_name, Country, "Unknown")) %>%
unique()
# Join countries to project data
all_projects_final <- countries_data %>%
# remove commas at start
mutate(Country = if_else(substr(Country, 1, 1) == ",", substr(Country, 2, length(Country)-1), Country)) %>%
rename(all_countries = Country) %>%
left_join(all_projects_split_country, by = c("id", "extending_org", "country_type"))
# Add row ID field to dataset
all_projects_final$row_id <- seq.int(nrow(all_projects_final))
rm(all_projects)
rm(all_projects_split_country)
# Extract project records with unknown or missing country field
unknown_country_projects <- filter(all_projects_final,
Country %in% c("Unknown") | is.na(Country)) %>%
select(row_id, id) %>%
unique() %>%
mutate(exclude = 1)
# Identify projects that have both a populated and missing country field
# Restrict to just the populated fields (to keep)
duplicate_country_projects <- filter(all_projects_final,
!(Country %in% c("Unknown") | is.na(Country))) %>%
select(row_id, id) %>%
unique() %>%
filter(id %in% unknown_country_projects$id) %>%
mutate(keep = 1)
# Exclude project records for "Unknown" country when the project has other country info
all_projects_tidied <- all_projects_final %>%
left_join(unknown_country_projects, by = c("row_id", "id")) %>%
left_join(duplicate_country_projects, by = c("row_id", "id")) %>%
filter(keep == 1 |
exclude == 1 & !(id %in% duplicate_country_projects$id) |
is.na(keep) & is.na(exclude)) %>%
select(-keep, -exclude) %>%
mutate(Country = coalesce(Country, "Unknown"))
rm(all_projects_final)
rm(unknown_country_projects)
rm(duplicate_country_projects)
# Tidy fund and funder labelling
all_projects_tidied <- all_projects_tidied %>%
mutate(Fund = if_else(str_detect(Fund, "FCDO Research & Innovation|FCDO fully"), "FCDO Research - Programmes", Fund),
Fund = if_else(str_detect(Fund, "FCDO partially"), "FCDO Research - Partnerships", Fund),
currency = if_else(currency == "GDP", "GBP", currency))
# Add FCDO programme ID to dataset
all_projects_tidied <- all_projects_tidied %>%
# remove any text before "-1-" in the FCDO IATI ID
mutate(fcdo_programme_id = if_else(Funder %in% c("Foreign, Commonwealth and Development Office", "FCDO")
& str_detect(iati_id, "-1-"),
sub(".*-1-", "", iati_id), "")) %>%
# remove any FCDO component numbers
mutate(fcdo_programme_id = sub("-.*", "", fcdo_programme_id))
# Create vector of FCDO gov funder programme IATI IDs
gov_funder_iati_ids <- all_projects_tidied %>%
select(iati_id) %>%
filter(str_detect(iati_id, "GB-1-|GB-GOV-1-")) %>%
unique()
# Create empty dataframe to hold name extract from IATI
gov_funder_programme_names <- data.frame()
# Run function over all IATI ids
for (id in gov_funder_iati_ids$iati_id) {
print(id)
data <- extract_iati_activity_name(id)
gov_funder_programme_names <- rbind(gov_funder_programme_names, data)
}
# Join funder programme name to main dataset
all_projects_tidied <- all_projects_tidied %>%
left_join(gov_funder_programme_names, by = c("iati_id" = "funder_iati_id"))
# TEMPORARY ***
# Remove IDRC DHSC IATI data (this has been provided by spreadsheet)
all_projects_tidied <- all_projects_tidied %>%
filter(!(Funder == "Department of Health and Social Care" & extending_org == "International Development Research Centre"))
# Remove Afghanistan projects (added Sep 21)
all_projects_tidied <- all_projects_tidied %>%
filter(Country != "Afghanistan")
# Manually edit country info for Chevening Scholarships
all_projects_tidied <- all_projects_tidied %>%
mutate(lead_org_country = if_else(Fund == "Chevening Scholarships", "United Kingdom", lead_org_country),
Country = if_else(Fund == "Chevening Scholarships" & country_type == 2, "United Kingdom", Country))
# Remove non-research partners
# (linked partner data from non-RED managed programmes)
all_projects_tidied <- all_projects_tidied %>%
filter(!(extending_org %in% c("Sightsavers",
"Coffey International Development Limited, a Tetra Tech Company")))
# Correct missing IDS name (ARPA activity)
all_projects_tidied <- all_projects_tidied %>%
mutate(extending_org = if_else(extending_org == "GB-COH-877338",
"Institute of Development Studies", extending_org))
# Remove WHO non-research/innovation activities
all_projects_tidied <- all_projects_tidied %>%
filter(!(extending_org == "World Health Organization") |
str_detect(title, "research|innovation"))
# check list of ODA R&I funds
table(all_projects_tidied$Fund)
# check list of ODA R&I funders
table(all_projects_tidied$Funder)
# check list of ODA R&I funders
table(all_projects_tidied$currency)
# Restrict to active projects for Tableau
all_projects_tidied <- all_projects_tidied %>%
mutate(country_type = if_else(country_type == "beneficiary_country", 1, 2)) %>%
filter(status %in% c("Active", "Unknown")) %>%
unique()
# Write to RDS
saveRDS(all_projects_tidied, "Outputs/all_projects_tidied.rds")
ODA_RI_url <- "https://docs.google.com/spreadsheets/d/1ByVBWb3LNSoqAUzKlddd537DleQ-y9MINwY_SuuZEbY/edit#gid=2024786204"
results <- as_sheets_id(ODA_RI_url)
results_sheet <- sheet_write(all_projects_tidied,
ss = results,
sheet = "ODA_RI_projects")
# Read in data from script 3
all_projects <- readRDS("Outputs/all_projects.rds")
table(all_projects$currency)
table(all_projects$Fund)
